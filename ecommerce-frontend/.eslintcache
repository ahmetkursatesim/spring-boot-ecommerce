[{"D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\index.js":"1","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\App.js":"2","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\serviceWorker.js":"3","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\config\\connector.js":"4","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\pages\\Home.js":"5","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Navbar2.js":"6","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Navbar.js":"7","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\pages\\Products.js":"8","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\pages\\Categories.js":"9","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\pages\\Login.js":"10","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\pages\\Signin.js":"11","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\pages\\Account.js":"12","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\config\\axios.js":"13","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\config\\values.js":"14","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\config\\context.js":"15","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\config\\reducer.js":"16","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\config\\apiCurrency.js":"17","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Product.js":"18","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Pagination.js":"19","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\detailProduct.js":"20","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Category.js":"21","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\AddProductForm.js":"22","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\AddCategoryForm.js":"23","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Product\\EditProdutDetail.js":"24","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Account\\ChangePhoto.js":"25","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Image\\canvasUtils.js":"26","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Image\\ImgDialog.js":"27","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Image\\styles.js":"28","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Owldemo1.js":"29","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\footerTab.js":"30","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\pages\\ShoppingCart.js":"31","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\pages\\Orders.js":"32","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Order\\OrderDetail.js":"33","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Account\\AccountMenu.js":"34","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\SidebarEcommerce.js":"35","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\ShoppingCart\\ShoppingCartMenu.js":"36","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\WishList\\WishListMenu.js":"37"},{"size":812,"mtime":1609333004097,"results":"38","hashOfConfig":"39"},{"size":1671,"mtime":1609329137175,"results":"40","hashOfConfig":"39"},{"size":5003,"mtime":1579794740000,"results":"41","hashOfConfig":"39"},{"size":7700,"mtime":1609350560017,"results":"42","hashOfConfig":"39"},{"size":13292,"mtime":1609354968182,"results":"43","hashOfConfig":"39"},{"size":4508,"mtime":1609352827107,"results":"44","hashOfConfig":"39"},{"size":1959,"mtime":1609329405523,"results":"45","hashOfConfig":"39"},{"size":5416,"mtime":1609317528206,"results":"46","hashOfConfig":"39"},{"size":1984,"mtime":1608732738746,"results":"47","hashOfConfig":"39"},{"size":1765,"mtime":1609317631405,"results":"48","hashOfConfig":"39"},{"size":2467,"mtime":1609317587684,"results":"49","hashOfConfig":"39"},{"size":7926,"mtime":1609317136645,"results":"50","hashOfConfig":"39"},{"size":162,"mtime":1579794740000,"results":"51","hashOfConfig":"39"},{"size":541,"mtime":1608897896006,"results":"52","hashOfConfig":"39"},{"size":99,"mtime":1608492592000,"results":"53","hashOfConfig":"39"},{"size":1457,"mtime":1608897895989,"results":"54","hashOfConfig":"39"},{"size":277,"mtime":1579794740000,"results":"55","hashOfConfig":"39"},{"size":4104,"mtime":1609354934262,"results":"56","hashOfConfig":"39"},{"size":531,"mtime":1609332603604,"results":"57","hashOfConfig":"39"},{"size":1799,"mtime":1609317220271,"results":"58","hashOfConfig":"39"},{"size":463,"mtime":1579794740000,"results":"59","hashOfConfig":"39"},{"size":8309,"mtime":1609318602419,"results":"60","hashOfConfig":"39"},{"size":1334,"mtime":1609318619860,"results":"61","hashOfConfig":"39"},{"size":9282,"mtime":1608642976000,"results":"62","hashOfConfig":"39"},{"size":7466,"mtime":1608644350000,"results":"63","hashOfConfig":"39"},{"size":2389,"mtime":1608628398000,"results":"64","hashOfConfig":"39"},{"size":2409,"mtime":1608555030000,"results":"65","hashOfConfig":"39"},{"size":496,"mtime":1608559510000,"results":"66","hashOfConfig":"39"},{"size":2678,"mtime":1608732053403,"results":"67","hashOfConfig":"39"},{"size":5253,"mtime":1609317998045,"results":"68","hashOfConfig":"39"},{"size":11368,"mtime":1609350926783,"results":"69","hashOfConfig":"39"},{"size":6693,"mtime":1609330014014,"results":"70","hashOfConfig":"39"},{"size":5939,"mtime":1609316887337,"results":"71","hashOfConfig":"39"},{"size":4022,"mtime":1609333896348,"results":"72","hashOfConfig":"39"},{"size":6751,"mtime":1609165088086,"results":"73","hashOfConfig":"39"},{"size":10606,"mtime":1609352298230,"results":"74","hashOfConfig":"39"},{"size":10474,"mtime":1609350426729,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},"1pro5xh",{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"79"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"79"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"79"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"79"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"79"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"79"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"79"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"79"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"79"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"79"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"79"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"79"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"79"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"79"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"79"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"79"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"79"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"79"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"79"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"79"},"D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\index.js",["175"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./main.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\nimport ReactNotification from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\n\nconst options = {\n    // you can also just use 'bottom center'\n    position: positions.TOP_RIGHT,\n    timeout: 1000\n}\n\n\nconst Root = () => (\n    <AlertProvider template={AlertTemplate} {...options}>\n        <ReactNotification />\n        <App/>\n    </AlertProvider>\n)\n\nReactDOM.render(<Root/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n",["176","177","178"],"D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\App.js",["179","180","181","182"],"import React, {useContext} from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Container } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport ContextConnector from \"./config/connector\";\nimport Owldemo1 from './components/Owldemo1'\n// Components\nimport Navbar from \"./components/Navbar\";\nimport Navbar2 from \"./components/Navbar2\";\nimport FooterPagePro from \"./components/footerTab\";\n\n// Pages\nimport Home from \"./pages/Home\";\nimport Products from \"./pages/Products\";\nimport Categories from \"./pages/Categories\";\nimport Login from \"./pages/Login\";\nimport MyAccount from \"./pages/Account\"\nimport Signin from \"./pages/Signin\";\nimport Orders from \"./pages/Orders\"\nimport \"./main.css\"\nimport ShoppingCart from \"./pages/ShoppingCart\";\n\nfunction App() {\n    return (\n\n        <ContextConnector >\n\n            <Router>\n                <Navbar2/>\n                <Switch >\n                    <Container>\n                        <Route exact path=\"/\" component={Home} />\n                        <Route exact path=\"/products\" component={Products} />\n                        <Route exact path=\"/login\" component={Login} />\n                        <Route exact path=\"/myaccount\" component={MyAccount} />\n                        <Route exact path=\"/signin\" component={Signin} />\n                        <Route exact path=\"/orders\" component={Orders} />\n                        <Route exact path=\"/shoppingcart\" component={ShoppingCart} />\n                    </Container>\n\n                </Switch>\n\n                <FooterPagePro/>\n            </Router>\n        </ContextConnector>\n    );\n}\n\nexport default App;\n","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\serviceWorker.js",[],"D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\config\\connector.js",["183","184"],"import React, { useReducer } from \"react\";\n\nimport axiosClient from \"./axios\";\nimport currencyClient from \"./apiCurrency\";\n\n// context\nimport userContext from \"./context\";\n\n// reducer\nimport Reducer from \"./reducer\";\n\n// type tags\nimport {\n  GET_CURRENCY,\n  GET_USER,\n  GET_CATEGORIES,\n  GET_PRODUCTS,\n  POST_USER,\n  POST_CATEGORY,\n  POST_PRODUCTS,\n  POST_FILE, POST_CART,\n  POST_WISH, POST_ORDERS,GET_ORDERS\n} from \"./values\";\n\nconst Context = props => {\n  let initialStatetmp = {\n    user: null,\n    currency: null,\n    products: [],\n    categories: [],\n    cart:[],\n    wish:[],\n    orders:[]\n  };\n  let initialState = localStorage.getItem('user') ? (\n      {\n        user: JSON.parse(localStorage.getItem('user')),\n        currency:localStorage.getItem('currency'),\n        products: [],\n        categories: [],\n        cart:localStorage.getItem('cart') ? localStorage.getItem('cart'):[],\n        wish:localStorage.getItem('wish') ? localStorage.getItem('wish'):[],\n        orders:[]\n      }\n  ): ({\n    user: null,\n    currency: null,\n    products: [],\n    categories: [],\n    cart:localStorage.getItem('cart') ? localStorage.getItem('cart'):[],\n    wish:localStorage.getItem('wish') ? localStorage.getItem('wish'):[],\n    orders:[]\n\n  });\n  const [state, dispatch] = useReducer(Reducer, initialState);\n\n  // API Currency\n  const getCurrency = async () => {\n    const res = await currencyClient.get(\"\");\n\n    dispatch({\n      type: GET_CURRENCY,\n      payload: res.data\n    });\n  };\n\n  // POST Methods\n  const addUser = async user => {\n    const res = await axiosClient.post(\"/users/add\", user);\n    localStorage.setItem(\"user\", JSON.stringify(res.data));\n    dispatch({\n      type: POST_USER,\n      payload: res.data\n    });\n  };\n\n  async function addCart(cart){\n    var tmpCart2={}\n    if(localStorage.hasOwnProperty(\"cart\")){\n      tmpCart2=JSON.parse(localStorage.getItem(\"cart\"))\n    }\n    if(!tmpCart2.hasOwnProperty(cart.id)){\n      tmpCart2[cart.id]=[cart,1]\n\n    }else{\n      tmpCart2[cart.id]=[cart,parseInt(tmpCart2[cart.id][1])+1]\n    }\n    localStorage.setItem(\"cart\",JSON.stringify(tmpCart2))\n    dispatch({\n    type: POST_CART,\n      payload: JSON.stringify(tmpCart2)\n     });\n  }\n  async function removeCart(cart){\n    var tmpCart2={}\n    if(localStorage.hasOwnProperty(\"cart\")){\n      tmpCart2=JSON.parse(localStorage.getItem(\"cart\"))\n    }\n    debugger;\n    if(tmpCart2.hasOwnProperty(cart.id)){\n      if(tmpCart2[cart.id][1]===1){\n        delete tmpCart2[cart.id]\n      }else{\n        tmpCart2[cart.id]=[cart,parseInt(tmpCart2[cart.id][1])-1]\n      }\n\n    }\n    localStorage.setItem(\"cart\",JSON.stringify(tmpCart2))\n    dispatch({\n      type: POST_CART,\n      payload: JSON.stringify(tmpCart2)\n    });\n  }\n\n  async function removeInstantlyCart(cart){\n    var tmpCart2={}\n    debugger;\n    if(localStorage.hasOwnProperty(\"cart\")){\n      tmpCart2=JSON.parse(localStorage.getItem(\"cart\"))\n    }\n    if(tmpCart2.hasOwnProperty(cart.id)){\n      delete tmpCart2[cart.id]\n    }\n    localStorage.setItem(\"cart\",JSON.stringify(tmpCart2))\n    dispatch({\n      type: POST_CART,\n      payload: JSON.stringify(tmpCart2)\n    });\n  }\n\n\n\n  async function removeInstantlyWish(cart){\n    var tmpCart2={}\n    if(localStorage.hasOwnProperty(\"wish\")){\n      tmpCart2=JSON.parse(localStorage.getItem(\"wish\"))\n    }\n    if(tmpCart2.hasOwnProperty(cart.id)){\n      delete tmpCart2[cart.id]\n\n    }\n    localStorage.setItem(\"wish\",JSON.stringify(tmpCart2))\n    dispatch({\n      type: POST_WISH,\n      payload: JSON.stringify(tmpCart2)\n    });\n  }\n\n\n\n  async function addWishList(cart){\n    var tmpCart2={}\n    if(localStorage.hasOwnProperty(\"wish\")){\n      tmpCart2=JSON.parse(localStorage.getItem(\"wish\"))\n    }\n    if(!tmpCart2.hasOwnProperty(cart.id)){\n      tmpCart2[cart.id]=[cart,1]\n\n    }else{\n      tmpCart2[cart.id]=[cart,parseInt(tmpCart2[cart.id][1])+1]\n    }\n    localStorage.setItem(\"wish\",JSON.stringify(tmpCart2))\n    dispatch({\n      type: POST_WISH,\n      payload: JSON.stringify(tmpCart2)\n    });\n  }\n\n  const addCategory = async category => {\n    const res = await axiosClient.post(\"/categories/add\", category);\n\n    dispatch({\n      type: POST_CATEGORY,\n      payload: res.data\n    });\n  };\n\n\n\n  async function uploadFile(file){\n    const file2 = new Blob([file], {type: 'text/plain'});\n    var formData = new FormData();\n    formData.append(\"file\", file2);\n    var pathCloud=await axiosClient.post(\"/file/upload\",formData , {headers: {'Content-Type': 'multipart/form-data'}})\n    return  pathCloud\n\n  }\n  const uploadProfilePhoto=async user => {\n    const res = await axiosClient.post(\"/users/updatephoto\", user);\n    localStorage.setItem(\"user\", JSON.stringify(res.data));\n    dispatch({\n      type: POST_USER,\n      payload: res.data\n    });\n  };\n  const addProduct = async product => {\n    const res = await axiosClient.post(\"/products/add\", product);\n    dispatch({\n      type: POST_PRODUCTS,\n      payload: res.data\n    });\n  };\n\n  const addOrder = async order => {\n    const res = await axiosClient.post(\"/ordermaster/add\", order);\n    localStorage.setItem(\"orders\", JSON.stringify(res.data));\n    dispatch({\n      type: POST_ORDERS,\n      payload: res.data\n    });\n  };\n\n  const editProduct = async product => {\n    const res = await axiosClient.post(\"/products/edit\", product);\n    dispatch({\n      type: POST_PRODUCTS,\n      payload: res.data\n    });\n  };\n\n  // GET Methods\n  const getUser = async user => {\n    const res = await axiosClient.get(\"/users/\" + user.email);\n    debugger;\n    if (res.data.password === user.password) {\n      var tmpdata=JSON.stringify(res.data)\n      localStorage.setItem(\"user\", tmpdata);\n      dispatch({\n        type: GET_USER,\n        payload: res.data\n      });\n    }else{\n      dispatch({\n        type: GET_USER,\n        payload: \"\"\n      });\n    }\n\n\n  };\n\n  const changeAdress =async adress => {\n    debugger;\n    const res = await axiosClient.post(\"/adresses/add\",adress);\n\n    var tmpdata=JSON.stringify(res.data)\n    localStorage.setItem(\"user\", tmpdata);\n    dispatch({\n      type: POST_USER,\n      payload: res.data\n    });\n\n  };\n\n\n  const getCategories = async () => {\n    const res = await axiosClient.get(\"/categories/all\");\n    dispatch({\n      type: GET_CATEGORIES,\n      payload: res.data\n    });\n  };\n  async function getProducts(id){\n    const res = await axiosClient.get(\"/products/all/\"+id);\n    dispatch({\n      type: GET_PRODUCTS,\n      payload: res.data\n    });\n\n  }\n  async function updateOrderStatus(order_id,user_id,status){\n    const res = await axiosClient.post(\"/ordermaster/updateorderstatus/\"+order_id+\"/\"+status+\"/\"+user_id);\n    debugger;\n    dispatch({\n      type: POST_ORDERS,\n      payload: res.data\n    });\n  }\n\n  async function getOrders(id){\n    const res = await axiosClient.get(\"/ordermaster/all/\"+id);\n    localStorage.setItem(\"orders\", JSON.stringify(res));\n    dispatch({\n      type: GET_ORDERS,\n      payload: res.data\n    });\n\n  }\n  return (\n    <userContext.Provider\n      value={{\n        user: state.user,\n        currency: state.currency,\n        categories: state.categories,\n        products: state.products,\n        cart:state.cart,\n        orders:state.orders,\n        wish:state.wish,\n        addUser,\n        addCategory,\n        addProduct,\n        getUser,\n        getCategories,\n        getProducts,\n        getCurrency,\n        uploadFile,\n        uploadProfilePhoto,\n        editProduct,\n        addCart,\n        addWishList,\n        removeCart,\n        removeInstantlyCart,\n        addOrder,getOrders,\n        updateOrderStatus,\n        changeAdress,\n        removeInstantlyWish\n      }}\n    >\n      {props.children}\n    </userContext.Provider>\n  );\n};\n\nexport default Context;\n","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\pages\\Home.js",["185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202"],"D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Navbar2.js",["203","204","205","206","207","208","209","210"],"import {Image, Menu} from \"semantic-ui-react\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport Context from \"../config/context\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport  '../stylesheet.css'\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport AccountMenu from \"./Account/AccountMenu\";\r\nimport ShoppingCartMenu from \"./ShoppingCart/ShoppingCartMenu\";\r\nimport WishListMenu from \"./WishList/WishListMenu\";\r\n\r\nfunction shoppingCartCount(){\r\n    let countItemsCart=0\r\n    if(localStorage.hasOwnProperty(\"cart\")){\r\n        var item=JSON.parse(localStorage.getItem(\"cart\"))\r\n        countItemsCart= Object.keys(item).length;\r\n    }\r\n    return countItemsCart\r\n}\r\n\r\nfunction wishListCount(){\r\n    let countItemsCart=0\r\n    if(localStorage.hasOwnProperty(\"wish\")){\r\n        var item=JSON.parse(localStorage.getItem(\"wish\"))\r\n        countItemsCart= Object.keys(item).length;\r\n    }\r\n    return countItemsCart\r\n}\r\n\r\n\r\nexport default function Navbar2() {\r\n    const history = useHistory();\r\n    const routeChange = () =>{\r\n        let path = `login`;\r\n        history.push(path);\r\n    }\r\n    const context = useContext(Context);\r\n    const { user,cart,wish} = context;\r\n    let cartListNavBar=[]\r\n    let wishListNavBar=[]\r\n    debugger;\r\n    if(localStorage.hasOwnProperty(\"cart\")){\r\n            var temp=JSON.parse(cart)\r\n            for (var key in Object.keys(temp)) {\r\n                cartListNavBar.push(temp[parseInt(Object.keys(temp)[key])][0])\r\n            }\r\n\r\n    }\r\n    if(localStorage.hasOwnProperty(\"wish\")){\r\n            var temp=JSON.parse(wish)\r\n            for (var key in Object.keys(temp)) {\r\n                wishListNavBar.push(temp[parseInt(Object.keys(temp)[key])][0])\r\n            }\r\n    }\r\n\r\n    const userInfo = user ? (\r\n        <AccountMenu/>\r\n    ) : (\r\n        <div id=\"cart\" className=\"cart toggle-wrap pull-right \" >\r\n            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={routeChange} >\r\n                <VpnKeyIcon/>\r\n            </IconButton>\r\n            <button type=\"button\" data-loading-text=\"Loading...\" className=\"toggle\"  name=\"login\"  onClick={routeChange}>\r\n                <strong>Giriş Yap</strong><br/>\r\n            </button>\r\n        </div>\r\n    );\r\n    const menubar2 = (\r\n            <header style={{backgroundColor:\"#d0e2f7\",position:\"fixed\",zIndex:\"1\",width:\"100%\"}}>\r\n                <div className=\"col-xs-4 col-md-4\"  style={{display:\"flex\",float:\"left\"}}>\r\n                    <h1 className=\"logo\">\r\n                        <a href=\"/\">\r\n                            <Image src=\"https://livedemo00-opencart.template-help.com/opencart_prod-23526/image/cache/catalog/logo-255x46.png\" title=\"Drug Store\" alt=\"Drug Store\" className=\"img-responsive\"/>\r\n                        </a>\r\n                    </h1>\r\n                </div>\r\n                <div className=\"col-xs-4 col-md-4\"  style={{display:\"flex\",float:\"left\"}}>\r\n                        <Navbar/>\r\n                </div>\r\n                <div className=\"col-xs-4 col-md-4 col-md-push-4 pull-right\"  style={{float:\"right\"}}>\r\n\r\n                   <div style={{float:\"right\"}}>\r\n                           <div  data-loading-text=\"Loading...\" className=\"toggle\" style={{float:\"left\"}}>\r\n                              <ShoppingCartMenu/>\r\n                               <div style={{float:\"left\"}}>\r\n                               <strong>Sepetim</strong>\r\n                                   <br/>\r\n                               <span id=\"cart-total2\" className=\"cart-total2\">{cartListNavBar.length} items</span>\r\n                               </div>\r\n                           </div>\r\n\r\n                       <div  data-loading-text=\"Loading...\" className=\"toggle\" style={{float:\"left\"}} >\r\n\r\n                               <WishListMenu/>\r\n                               <div style={{float:\"left\"}}>\r\n                                   <strong>Beğendiklerim</strong>\r\n                                   <br/>\r\n                                   <span id=\"wishlist-total3\" className=\"cart-total2\">{wishListNavBar.length} items</span>\r\n                               </div>\r\n\r\n                       </div>\r\n\r\n                       {userInfo}\r\n                   </div>\r\n\r\n\r\n\r\n                </div>\r\n            </header>\r\n\r\n\r\n    );\r\n    return  menubar2\r\n}","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Navbar.js",["211","212"],"import React, { useContext, useState } from \"react\";\n\nimport { Menu } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport Context from \"../config/context\";\nimport AddProductForm from \"./AddProductForm\";\nimport context from \"../config/context\";\n\n\n\nexport default function Navbar() {\n  const context = useContext(Context);\n  const { user} = context;\n  const path = \"home\";\n  const [activeItem, setActiveItem] = useState(path);\n\n  const handleItemClick = (e, { name }) => setActiveItem(name);\n  const addProp = user ? user.admin ? (\n          <Menu pointing secondary size=\"massive\" color=\"teal\">\n              <Menu.Item name=\"AnaSayfa\" active={activeItem === \"AnaSayfa\"} onClick={handleItemClick} as={Link} to=\"/\"/>\n              <Menu.Item name=\"Ürünler\" active={activeItem === \"Ürünler\"} onClick={handleItemClick} as={Link} to=\"/products\"/>\n              <Menu.Item name=\"Siparişler\" active={activeItem === \"Siparişler\"} onClick={handleItemClick} as={Link} to=\"/orders\"/>\n          </Menu>\n\n  ): (\n      <Menu pointing secondary size=\"massive\" color=\"teal\">\n          <Menu.Item name=\"AnaSayfa\" active={activeItem === \"AnaSayfa\"} onClick={handleItemClick} as={Link} to=\"/\"/>\n          <Menu.Item name=\"Siparişlerim\" active={activeItem === \"Siparişlerim\"} onClick={handleItemClick} as={Link} to=\"/orders\"/>\n          <Menu.Item name=\"Sepetim\" active={activeItem === \"Sepetim\"} onClick={handleItemClick} as={Link} to=\"/shoppingcart\"/>\n      </Menu>\n  ) : (\n      <Menu pointing secondary size=\"massive\" color=\"teal\">\n          <Menu.Item name=\"AnaSayfa\" active={activeItem === \"AnaSayfa\"} onClick={handleItemClick} as={Link} to=\"/\"/>\n          <Menu.Item name=\"Üye Ol\" active={activeItem === \"Üye Ol\"} onClick={handleItemClick} as={Link} to=\"/signin\"/>\n      </Menu>\n\n\n  )\n  const menuBar = (\n      <div style={{backgroundColor:\"#d0e2f7\",display:\"flex\",margin:\"auto\"}}>\n          {addProp}\n      </div>\n  );\n  return menuBar;\n}\n","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\pages\\Products.js",["213","214","215","216","217","218","219"],"import React, { useContext, useState, useEffect } from \"react\";\n\nimport {Grid, Card, Segment, Image} from \"semantic-ui-react\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Product from \"../components/Product\";\nimport Pagination from \"../components/Pagination\";\nimport AddProductForm from \"../components/AddProductForm\";\nimport Context from \"../config/context\";\nimport  \"../stylesheet.css\"\nimport \"../main.css\"\nimport Detail from \"../components/detailProduct\";\nimport EditProdutDetail from \"../components/Product/EditProdutDetail\";\n\nfunction createData(src,drugName,drugDesc ,drugPrice) {\n    return { src, drugName, drugDesc, drugPrice};\n}\n\nfunction pushItems(productList){\n    rows=[]\n    productList.map((item) => (rows.push( createData(item.picture1,item.name,item.description,item.price))\n    ))\n\n\n}\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: \"#66a7fd\",\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 18,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\nlet rows = [];\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 440,\n    },\n});\nexport default function Products() {\n  const context = useContext(Context);\n  const { user, products, getProducts } = context;\n\n  useEffect(() => {getProducts(user.id);}, []);\n  pushItems(products)\n\n  const add = user ? user.admin ? <AddProductForm /> : null : null;\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n\n  const indexOfLastProduct = (page+1)* rowsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - rowsPerPage;\n  const currentProducts = products.slice(\n        indexOfFirstProduct,\n        indexOfLastProduct\n  );\n\n  const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n  };\n\n\n  return (\n      <div style={{width:\"100%\",marginLeft:\"0\",marginRight:\"0\",marginTop:\"125px\",minHeight:\"750px\"}}>\n          <TableContainer component={Paper}>\n              {add}\n              <Table className={classes.table} aria-label=\"customized table\">\n                  <TableHead>\n                      <TableRow>\n                          <StyledTableCell align=\"center\">Ürün Resmi</StyledTableCell>\n                          <StyledTableCell  align=\"center\">Ürün Adı</StyledTableCell>\n                          <StyledTableCell  align=\"center\">Ürün Açıklaması</StyledTableCell>\n                          <StyledTableCell  align=\"center\">Fiyatı</StyledTableCell>\n                          <StyledTableCell  align=\"center\">Adeti</StyledTableCell>\n                          <StyledTableCell  align=\"center\">Üreten Firma</StyledTableCell>\n                          <StyledTableCell  align=\"center\">İşlemler</StyledTableCell>\n                      </TableRow>\n                  </TableHead>\n                  <TableBody>\n                      {currentProducts.map((row) => (\n                          <StyledTableRow key={row.picture1}>\n                              <StyledTableCell  align=\"center\">{\n                                  <Image src={row.picture1}  style={{width: 100, height:100,borderRadius:50,display:\"inline\"}}>\n                                  </Image>\n                              }</StyledTableCell>\n                              <StyledTableCell  align=\"center\">{row.name}</StyledTableCell>\n                              <StyledTableCell  align=\"center\">{row.description}</StyledTableCell>\n                              <StyledTableCell  align=\"center\">{row.price}</StyledTableCell>\n                              <StyledTableCell  align=\"center\">{row.piece}</StyledTableCell>\n                              <StyledTableCell  align=\"center\">{row.manufacturer_name}</StyledTableCell>\n                              <StyledTableCell  align=\"center\">{\n                                  <div>\n                                      <Detail product={row}/>\n                                      <EditProdutDetail product={row} />\n                                  </div>\n\n\n                              }</StyledTableCell>\n                          </StyledTableRow>\n                      ))}\n                  </TableBody>\n              </Table>\n              <TablePagination\n                  rowsPerPageOptions={[5, 10, 25]}\n                  component=\"div\"\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n              />\n          </TableContainer>\n      </div>\n\n  );\n\n\n\n}\n","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\pages\\Categories.js",["220","221"],"import React, { useContext, useState, useEffect } from \"react\";\n\nimport { Grid, Segment, Card } from \"semantic-ui-react\";\n\nimport Category from \"../components/Category\";\nimport Pagination from \"../components/Pagination\";\nimport AddCategoryForm from \"../components/AddCategoryForm\";\n\nimport Context from \"../config/context\";\n\nexport default function Categories() {\n  const context = useContext(Context);\n  const { user, categories, getCategories } = context;\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPage] = useState(9);\n\n  useEffect(() => {\n    getCategories();\n  }, []);\n\n  // Get current categories\n  const indexOfLastCategory = currentPage * cardsPerPage;\n  const indexOfFirstCategory = indexOfLastCategory - cardsPerPage;\n  const currentCategories = categories.slice(\n    indexOfFirstCategory,\n    indexOfLastCategory\n  );\n\n  const views =\n    categories.length > 0 ? (\n      currentCategories.map(category => <Category category={category} />)\n    ) : (\n      <Card>\n        <Card.Content>\n          <h2>Nothing here!</h2>\n        </Card.Content>\n      </Card>\n    );\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const pagination =\n    categories.length > cardsPerPage ? (\n      <Pagination\n        cardsPerPage={cardsPerPage}\n        totalCards={categories.length}\n        paginate={paginate}\n      />\n    ) : null;\n\n  const add = user ? user.admin ? <AddCategoryForm /> : null : null;\n\n  return (\n    <div style={{width:\"100%\",marginLeft:\"0\",marginRight:\"0\",marginTop:\"125px\",minHeight:\"750px\"}}>\n      <Segment>\n        <Grid>\n          <Grid.Column floated=\"left\" width={5}>\n            <h1>Recent Categories</h1>\n          </Grid.Column>\n          <Grid.Column floated=\"right\" width={5}>\n            {add}\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Card.Group fluid itemsPerRow=\"3\">\n        {views}\n      </Card.Group>\n      <br />\n      <center>{pagination}</center>\n    </div>\n  );\n}\n","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\pages\\Login.js",[],"D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\pages\\Signin.js",["222","223","224"],"import React, { useContext, useState } from \"react\";\n\nimport { Redirect } from \"react-router-dom\";\n\nimport {Grid, Card, Header, Button, Form, Image} from \"semantic-ui-react\";\n\nimport Home from \"./Home\";\n\nimport Context from \"../config/context\";\n\nexport default function Signin() {\n  const context = useContext(Context);\n  const { user, addUser } = context;\n\n  const [name, setName] = useState(\"\");\n  const [picture, setPicture] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const handleChange1 = (e, { value }) => setName({ value });\n  const handleChange2 = (e, { value }) => setPicture({ value });\n  const handleChange3 = (e, { value }) => setEmail({ value });\n  const handleChange4= (e, { value }) => setSurname({ value });\n\n\n\n  const handleSubmit = () => {\n    const user = {\n      adress_id:0 ,\n      email: email.value,\n      name:name.value,\n      surname:surname.value,\n      password: picture.value,\n      is_admin: false,\n      picture:\"\"\n    };\n    addUser(user);\n  };\n\n  const view = user ? (\n    <Redirect to=\"/\" />\n  ) : (\n      <div  style={{width:\"100%\",marginTop:\"150px\"}}>\n        <Card fluid>\n          <Card.Content>\n            <Header textAlign=\"center\">Drug Store Hoşgeldiniz</Header>\n            <Form onSubmit={handleSubmit}>\n              <Form.Input\n                  name=\"name\"\n                  label=\"Adı\"\n                  placeholder=\"Adı\"\n                  onChange={handleChange1}\n                  value={name.value}\n              />\n              <Form.Input\n                  name=\"surname\"\n                  label=\"Soyadı\"\n                  placeholder=\"Soyadı\"\n                  onChange={handleChange4}\n                  value={surname.value}\n              />\n              <Form.Input\n                  name=\"email\"\n                  label=\"E-Posta\"\n                  placeholder=\"mail@mail.com\"\n                  onChange={handleChange3}\n                  value={email.value}\n              />\n              <Form.Input\n                  name=\"image\"\n                  label=\"Şifre\"\n                  placeholder=\"*****\"\n                  type=\"password\"\n                  onChange={handleChange2}\n                  value={picture.value}\n              />\n              <Button color=\"teal\" fluid type=\"submit\">\n               Kayıt ol\n              </Button>\n            </Form>\n          </Card.Content>\n        </Card>\n      </div>\n\n  );\n\n  return view;\n}\n","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\pages\\Account.js",["225","226","227","228"],"import React, { useContext, useState } from \"react\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport {Grid, Card, Header, Button, Form, Dropdown, Modal, Image} from \"semantic-ui-react\";\r\nimport Context from \"../config/context\";\r\nimport ChangePhoto from \"../components/Account/ChangePhoto\";\r\nimport { useAlert } from 'react-alert'\r\nimport { Tab, Tabs } from 'react-bootstrap'\r\nexport default function MyAccount() {\r\n    const alert = useAlert()\r\n    const context = useContext(Context);\r\n    const { user,changeAdress } = context;\r\n    const [picture, setPicture] = useState(\"\");\r\n    const [streetName, setStreetName] = useState(\"\");\r\n    const [townName, setTownName] = useState(\"\");\r\n    const [country, setCountry] = useState(\"\");\r\n    const [postCode, setPostCode] = useState(\"\");\r\n\r\n    const handleChange2 = (e, { value }) => setPicture({ value });\r\n    const handleStreetName = (e, { value }) => setStreetName({ value });\r\n    const handleTownName= (e, { value }) => setTownName({ value });\r\n    const handleCountry= (e, { value }) => setCountry({ value });\r\n    const handlePostCode= (e, { value }) => setPostCode({ value });\r\n    const handleSubmit = () => {};\r\n    const [activeTab,setActiveTab]=useState(1)\r\n    function handleSelect(selectedTab) {\r\n        setActiveTab(selectedTab)\r\n\r\n    }\r\n\r\n    async function changeAccountAdress(){\r\n        const accountAdress={\r\n            streetName:streetName.value,\r\n            townName:townName.value,\r\n            country:country.value,\r\n            postCode:postCode.value,\r\n            user:user\r\n        }\r\n        await changeAdress(accountAdress)\r\n    }\r\n\r\n    const view = user ? (\r\n        <div  style={{display:\"flex\",width:\"100%\",marginTop:\"125px\"}}>\r\n\r\n            <div style={{width:\"20%\",marginRight:\"1%\"}}>\r\n\r\n\r\n                {\r\n                    user?(\r\n                            <div>\r\n                                <Image src={user.picture} style={{width:300,height:300,borderRadius:150}}>\r\n                                </Image>\r\n                                <Form style={{display:\"flex\",justifyContent:\"flex-end\",bottom:50,right:50}}>\r\n                                    <ChangePhoto user={user} />\r\n                                </Form>\r\n\r\n                            </div>\r\n\r\n                    ):(\r\n\r\n                        <div>\r\n                            <Image src=\"https://www.pureingenuity.com/wp-content/uploads/2018/07/empty-profile-image-300x262.jpg\">\r\n                            </Image>\r\n                            <br/>\r\n                            <Form style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n                                <ChangePhoto user={user} />\r\n                            </Form>\r\n\r\n                        </div>\r\n\r\n                    )\r\n\r\n\r\n                }\r\n\r\n            </div>\r\n            <div style={{width:\"20%\",marginRight:\"1%\"}} >\r\n                <Card.Content>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Input\r\n                            name=\"name\"\r\n                            label=\"Adı\"\r\n                            placeholder=\"name\"\r\n                            value={user.name}\r\n                        />\r\n                        <Form.Input\r\n                            name=\"Surname\"\r\n                            label=\"Soyadı\"\r\n                            placeholder=\"Product description (Optional)\"\r\n                            value={user.surname}\r\n                        />\r\n                        <Form.Input\r\n                            name=\"Adress\"\r\n                            label=\"Adresi\"\r\n                            placeholder=\"Adress is Empty\"\r\n                            value={\r\n                                user.adress?user.adress.streetName +\" \"+user.adress.townName+\"/\"+user.adress.country +\"  \"+user.adress.postCode:\"\"\r\n                            }\r\n                        />\r\n                        <Form.Input\r\n                            name=\"Email\"\r\n                            label=\"E-Posta\"\r\n                            placeholder=\"Product description (Optional)\"\r\n                            value={user.email}\r\n                        />\r\n                    </Form>\r\n                </Card.Content>\r\n            </div>\r\n            <div style={{width:\"60%\"}}>\r\n                <Tabs activeKey={activeTab} onSelect={handleSelect}>\r\n                    <Tab eventKey={1} title=\"Şifre Degiştirme\">\r\n                        <Card fluid>\r\n                            <Card.Content>\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Form.Input\r\n                                        name=\"image\"\r\n                                        label=\"Şifre\"\r\n                                        placeholder=\"*****\"\r\n                                        type=\"password\"\r\n                                        onChange={handleChange2}\r\n                                        value={picture.value}\r\n                                    />\r\n                                    <Button color=\"teal\" fluid type=\"submit\">\r\n                                        Change Password\r\n                                    </Button>\r\n                                </Form>\r\n                            </Card.Content>\r\n                        </Card>\r\n                    </Tab>\r\n                    <Tab eventKey={2} title=\"Adresi Degiştirme\">\r\n                        <Card fluid>\r\n                            <Card.Content>\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Form.Input\r\n                                        name=\"town\"\r\n                                        label=\"Şehir\"\r\n                                        placeholder=\"Town or City \"\r\n                                        type=\"text\"\r\n                                        onChange={handleTownName}\r\n                                        value={townName.value}\r\n                                    />\r\n                                    <Form.Input\r\n                                        name=\"town1\"\r\n                                        label=\"Sokak Adı ve Daire No\"\r\n                                        placeholder=\"StreetName && Street Number \"\r\n                                        type=\"text\"\r\n                                        onChange={handleStreetName}\r\n                                        value={streetName.value}\r\n                                    />\r\n                                    <Form.Input\r\n                                        name=\"country\"\r\n                                        label=\"Ülke\"\r\n                                        placeholder=\"Country\"\r\n                                        type=\"text\"\r\n                                        onChange={handleCountry}\r\n                                        value={country.value}\r\n                                    />\r\n                                    <Form.Input\r\n                                        name=\"town2\"\r\n                                        label=\"Posta Kodu\"\r\n                                        placeholder=\"PostCode\"\r\n                                        type=\"text\"\r\n                                        onChange={handlePostCode}\r\n                                        value={postCode.value}\r\n                                    />\r\n\r\n                                    <Button color=\"teal\" fluid  onClick={() => {changeAccountAdress()\r\n                                        alert.success('Changed Adress')}}>Change Adress</Button>\r\n                                </Form>\r\n                            </Card.Content>\r\n                        </Card>\r\n                    </Tab>\r\n                </Tabs>\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n    ) : (\r\n        <Redirect to=\"/\" />\r\n    );\r\n\r\n\r\n    return view;\r\n}\r\n","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\config\\axios.js",[],"D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\config\\values.js",[],"D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\config\\context.js",[],"D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\config\\reducer.js",[],"D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\config\\apiCurrency.js",[],"D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Product.js",["229","230","231","232","233","234"],"D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Pagination.js",["235"],"import React from \"react\";\n\nimport { Button } from \"semantic-ui-react\";\n\nexport default function Pagination({ cardsPerPage, totalCards, paginate }) {\n  const pageNumbers = [];\n  const styleWidth={\n    width:\"10%\",\n  }\n  for (let i = 1; i <= Math.ceil(totalCards / cardsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <Button.Group className=\"pagination\" >\n      {pageNumbers.map(number => (\n        <Button onClick={() => paginate(number)} className=\"page-link\">{number}</Button>\n      ))}\n    </Button.Group>\n  );\n}\n","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\detailProduct.js",["236","237","238","239","240","241","242","243","244"],"import React, { useContext, useEffect } from \"react\";\r\n\r\nimport Context from \"../config/context\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { useAlert } from 'react-alert'\r\nimport {\r\n    Form,\r\n    Modal,\r\n    Button,\r\n    Header,\r\n    Dropdown,\r\n    Image,\r\n    Grid\r\n} from \"semantic-ui-react\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nconst styledisp={\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    marginRight:\"5px\",\r\n    marginBottom:\"5px\",\r\n    marginTop:\"5px\"\r\n}\r\nconst colorBtn={\r\n    backgroundColor:\"#66a7fd\"\r\n}\r\nexport default function Detail(props) {\r\n    const context = useContext(Context);\r\n\r\n    var cv=props.product\r\n    return (\r\n        <Modal trigger={\r\n           <IconButton style={colorBtn}>\r\n               <InfoIcon/>\r\n           </IconButton>\r\n        }>\r\n            <Modal.Content>\r\n                 <div style={{justifyContent:\"center\",display:\"flex\"}}>\r\n                     <Image src={props.product.picture1}   style={{width: 400, height:400,borderRadius:400/2}} />\r\n                </div>\r\n                <br />\r\n                <Form>\r\n                    <Form.Input name=\"name\" label=\"Ürün Adı\" value={props.product.name} />\r\n                    <Form.Input\r\n                        name=\"description\"\r\n                        label=\"Ürün Açıklaması\"\r\n                        value={props.product.description}\r\n                    />\r\n                    <Form.Group widths=\"equal\">\r\n                        <Form.Input\r\n                            name=\"price\"\r\n                            label=\"Fiyatı\"\r\n                            value={props.product.price+\"TL\" }\r\n                        />\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n}\r\n","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Category.js",["245"],"import React from \"react\";\nimport { Card, Image, Label } from \"semantic-ui-react\";\n\nexport default function Category(props) {\n  const pic = props.category.picture\n    ? props.category.picture\n    : \"https://react.semantic-ui.com/images/avatar/large/matthew.png\";\n\n  return (\n    <Card color=\"teal\">\n      <Image src={pic} wrapped ui={false} />\n      <Card.Content>\n        <Card.Header>{props.category.name}</Card.Header>\n      </Card.Content>\n    </Card>\n  );\n}\n","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\AddProductForm.js",["246","247","248","249","250","251","252","253"],"import React, { useContext, useState, useEffect,useCallback } from \"react\";\n\nimport { Form, Modal, Button, Header, Dropdown,Image } from \"semantic-ui-react\";\nimport AddIcon from '@material-ui/icons/Add';\n\nimport Context from \"../config/context\";\nimport {IconButton} from \"@material-ui/core\";\nimport Cropper from 'react-easy-crop'\nimport Slider from '@material-ui/core/Slider'\nimport Typography from '@material-ui/core/Typography'\nimport { getOrientation } from 'get-orientation/browser'\nimport { withStyles } from '@material-ui/core/styles'\nimport ImgDialog from './Image/ImgDialog'\n\nimport { getCroppedImg, getRotatedImage } from './Image/canvasUtils'\nimport \"../main.css\"\nfunction readFile(file) {\n  return new Promise(resolve => {\n    const reader = new FileReader()\n    reader.addEventListener('load', () => resolve(reader.result), false)\n    reader.readAsDataURL(file)\n  })\n}\n\nexport default function AddProductForm() {\n  const context = useContext(Context);\n  const { categories, getCategories, addProduct,uploadFile,user} = context;\n  const ORIENTATION_TO_ANGLE = {\n    '3': 180,\n    '6': 90,\n    '8': -90,\n  }\n  debugger;\n  const [imageSrc, setImageSrc] = React.useState(null)\n  const [crop, setCrop] = useState({ x: 0, y: 0 })\n  const [rotation, setRotation] = useState(0)\n  const [zoom, setZoom] = useState(1)\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\n  const [croppedImage, setCroppedImage] = useState(null)\n  ////////////////////////////  Image///////////////////\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {setCroppedAreaPixels(croppedAreaPixels)}, [])\n\n  const onFileChange = async e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const file = e.target.files[0]\n      let imageDataUrl = await readFile(file)\n      const orientation = await getOrientation(file)\n      const rotation = ORIENTATION_TO_ANGLE[orientation]\n      if (rotation) {\n        imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n      }\n      setImageSrc(imageDataUrl)\n    }\n  }\n\n  ////////////////\n  useEffect(() => {\n    getCategories();\n  }, []);\n\n  const styledisp={\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    marginRight:\"5px\",\n    marginBottom:\"5px\",\n    marginTop:\"5px\"\n  }\n  const colorBtn={\n    backgroundColor:\"#66a7fd\"\n  }\n\n  const listCategories = categories.map(category => ({\n    key: category.id,\n    text: category.name,\n    value: category.id\n  }));\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [piece, setPiece] = useState(\"\");\n  const [picture1, setPicture1] = useState(\"\");\n  const [manufacturer, setManufacturer] = useState(\"\");\n  const handleChange1 = (e, { value }) => setName({ value });\n  const handleChange2 = (e, { value }) => setDescription({ value });\n  const handleChange3 = (e, { value }) => setCategory({ value });\n  const handleChange4 = (e, { value }) => setPrice({ value });\n  const handleChangePiece = (e, { value }) => setPiece({ value });\n  const handleChangeManufacturer = (e, { value }) => setManufacturer({ value });\n  const HandleSubmit = async () => {\n    const pictures = [picture1.value];\n    await CroppedImagess();\n  };\n  async function CroppedImagess() {\n    const croppedImage= await getCroppedImg(imageSrc, croppedAreaPixels, rotation)\n    let promiseUploadFile=new Promise(function(myResolve, myReject) {\n      let myUploadResult= uploadFile(croppedImage)\n      myResolve(myUploadResult)\n    });\n    let result=await promiseUploadFile\n    let pathImage=\"\"\n    if (result !==\"\"){\n       pathImage=result.data\n      console.log(\"sdsdsd\")\n    }\n      let addProductPromise=new Promise(function(myResolve, myReject) {\n        const product = {\n          name: name.value,\n          description: description.value,\n          category_id: parseInt(category.value),\n          price: parseFloat(price.value),\n          piece: parseInt(piece.value),\n          manufacturer_name:manufacturer.value,\n          p_code:\"\",\n          created_user_Id:user.id,\n          updated_user_Id:user.id,\n          picture1: process.env.PUBLIC_URL + '/generalfileStorage/'+ pathImage,\n        };\n        debugger;\n        let ad= addProduct(product);\n        myResolve(ad)\n      });\n      let result2= await addProductPromise\n\n\n  }\n  return (\n    <Modal\n      trigger={\n        <div style={styledisp}>\n          <IconButton style={colorBtn} >\n            <AddIcon/>\n          </IconButton>\n        </div>\n\n      }\n    >\n      <Modal.Header>Ürün Ekle</Modal.Header>\n      <Modal.Content>\n        <div>\n          {imageSrc ? (\n              <React.Fragment>\n                      <div className=\"crop-container\">\n                        <Cropper image={imageSrc} crop={crop} rotation={rotation} aspect={1} zoom={zoom} onCropChange={setCrop} onRotationChange={setRotation} onCropComplete={onCropComplete} onZoomChange={setZoom} cropShape={\"round\"}/>\n                      </div>\n                <center>\n                <div style={{width:\"200px\",height:\"200px\"}}></div><br/>\n                </center>\n                <div className={{ padding: 16, display: 'flex', flexDirection: 'column', alignItems: 'stretch'}}>\n                  <div className={ {display: 'flex',flex: '1',alignItems: 'center'}}>\n                    <Typography variant=\"overline\">\n                      Zoom\n                    </Typography>\n                    <Slider value={zoom} min={1} max={3} step={0.1} aria-labelledby=\"Zoom\" classes={{  padding: '22px 0px', marginLeft: 16 }} onChange={(e, zoom) => setZoom(zoom)}\n                    />\n                  </div>\n                </div>\n                <br/>\n                <center>\n                  <input type=\"file\" onChange={onFileChange} accept=\"image/*\" />\n                </center>\n\n              </React.Fragment>\n          ) : (\n              <div style={{width:\"100%\"}}>\n                 <center>\n                  <Image src=\"https://www.pureingenuity.com/wp-content/uploads/2018/07/empty-profile-image-300x262.jpg\"></Image><br/>\n                  <input type=\"file\" onChange={onFileChange} accept=\"image/*\" />\n                </center>\n              </div>\n          )}\n        </div>\n        <div>\n          <Form onSubmit={HandleSubmit}>\n            <Form.Input\n                name=\"name\"\n                label=\"Ürün adı\"\n                placeholder=\"Ürün adı\"\n                onChange={handleChange1}\n                value={name.value}\n            />\n            <Form.Input\n                name=\"description\"\n                label=\"Ürün Açıklaması\"\n                placeholder=\"Product description (Optional)\"\n                onChange={handleChange2}\n                value={description.value}\n            />\n            <Form.Field>\n              <Header as=\"h5\">Kategori</Header>\n              <Dropdown\n                  name=\"category\"\n                  placeholder=\"Category\"\n                  fluid\n                  selection\n                  options={listCategories}\n                  onChange={handleChange3}\n                  value={category.value}\n              />\n            </Form.Field>\n            <Form.Group widths=\"equal\">\n              <Form.Input\n                  name=\"price\"\n                  label=\"Fiyat\"\n                  placeholder=\"Fiyat (TL)\"\n                  onChange={handleChange4}\n                  value={price.value}\n              />\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Input\n                  name=\"piece\"\n                  label=\"Adeti\"\n                  placeholder=\"adt.\"\n                  onChange={handleChangePiece}\n                  value={piece.value}\n              />\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Input\n                  name=\"manufacturer\"\n                  label=\"Üreten Firma\"\n                  placeholder=\"Üreten Firma\"\n                  onChange={handleChangeManufacturer}\n                  value={manufacturer.value}\n              />\n            </Form.Group>\n            <Button primary fluid  onClick={async () => {await HandleSubmit} }> Save </Button>\n          </Form>\n        </div>\n\n      </Modal.Content>\n    </Modal>\n  );\n}\n","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\AddCategoryForm.js",[],"D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Product\\EditProdutDetail.js",["254","255","256","257","258","259","260","261","262","263","264","265","266"],"import React, { useContext, useState, useEffect,useCallback } from \"react\";\r\nimport Context from \"../../config/context\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Form, Modal, Button, Header, Dropdown,Image ,Grid} from \"semantic-ui-react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport Cropper from 'react-easy-crop'\r\nimport Slider from '@material-ui/core/Slider'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { getOrientation } from 'get-orientation/browser'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport ImgDialog from '../Image/ImgDialog'\r\nimport \"../../main.css\"\r\nimport { getCroppedImg, getRotatedImage } from '../Image/canvasUtils'\r\nimport { styles } from '../Image/styles'\r\nfunction readFile(file) {\r\n    return new Promise(resolve => {\r\n        const reader = new FileReader()\r\n        reader.addEventListener('load', () => resolve(reader.result), false)\r\n        reader.readAsDataURL(file)\r\n    })\r\n}\r\nexport default function Detail(props) {\r\n    const context = useContext(Context);\r\n    const { categories, getCategories, editProduct ,uploadFile,user} = context;\r\n    const ORIENTATION_TO_ANGLE = {\r\n        '3': 180,\r\n        '6': 90,\r\n        '8': -90,\r\n    }\r\n    const [imageSrc, setImageSrc] = React.useState(null)\r\n    const [crop, setCrop] = useState({ x: 0, y: 0 })\r\n    const [rotation, setRotation] = useState(0)\r\n    const [zoom, setZoom] = useState(1)\r\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\r\n    const [croppedImage, setCroppedImage] = useState(null)\r\n    ////////////////////////////  Image///////////////////\r\n    const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {setCroppedAreaPixels(croppedAreaPixels)}, [])\r\n    const showCroppedImage = useCallback(async () => {\r\n        try {\r\n            const croppedImage = await getCroppedImg(imageSrc, croppedAreaPixels, rotation)\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }, [imageSrc, croppedAreaPixels, rotation])\r\n    const onClose = useCallback(() => {\r\n        setCroppedImage(null)\r\n    }, [])\r\n    const onFileChange = async e => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const file = e.target.files[0]\r\n            let imageDataUrl = await readFile(file)\r\n            const orientation = await getOrientation(file)\r\n            const rotation = ORIENTATION_TO_ANGLE[orientation]\r\n            if (rotation) {\r\n                imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\r\n            }\r\n            setImageSrc(imageDataUrl)\r\n        }\r\n    }\r\n\r\n    ////////////////\r\n    useEffect(() => {\r\n        getCategories();\r\n    }, []);\r\n    const listCategories = categories.map(category => ({\r\n        key: category.id,\r\n        text: category.name,\r\n        value: category.id\r\n    }));\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [category, setCategory] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [piece, setPiece] = useState(\"\");\r\n    const [picture1, setPicture1] = useState(\"\");\r\n    const [manufacturer, setManufacturer] = useState(\"\");\r\n    const handleEditName= (e, { value }) => setName({ value });\r\n    const handleEditDescription = (e, { value }) => setDescription({ value });\r\n    const handleEditCategory = (e, { value }) => setCategory({ value });\r\n    const handleEditPrice = (e, { value }) => setPrice({ value });\r\n    const handleEditPiece = (e, { value }) => setPiece({ value });\r\n    const handleEditManufacturer = (e, { value }) => setManufacturer({ value });\r\n    const HandleSubmit = async () => {\r\n        const pictures = [picture1.value];\r\n        await CroppedImagess();\r\n    };\r\n    async function CroppedImagess() {\r\n        const croppedImage= await getCroppedImg(imageSrc, croppedAreaPixels, rotation)\r\n        let promiseUploadFile=new Promise(function(myResolve, myReject) {\r\n            let myUploadResult= uploadFile(croppedImage)\r\n            myResolve(myUploadResult)\r\n        });\r\n        let result=await promiseUploadFile\r\n        let pathImage=\"\"\r\n        if (result !==\"\"){\r\n            pathImage=result.data\r\n            console.log(\"sdsdsd\")\r\n        }\r\n        let addProductPromise=new Promise(function(myResolve, myReject) {\r\n            const product = {\r\n                id:props.product.id,\r\n                name: name.value,\r\n                description: description.value,\r\n                category_id: parseInt(category.value),\r\n                price: parseFloat(price.value),\r\n                piece: parseInt(piece.value),\r\n                manufacturer_name:manufacturer.value,\r\n                p_code:\"\",\r\n                created_user_Id:user.id,\r\n                updated_user_Id:user.id,\r\n                picture1: process.env.PUBLIC_URL + '/generalfileStorage/'+ pathImage,\r\n            };\r\n            debugger;\r\n            let ad= editProduct(product);\r\n            myResolve(ad)\r\n        });\r\n        let result2= await addProductPromise\r\n\r\n\r\n    }\r\n    return (\r\n        <Modal trigger={\r\n                <IconButton style={{backgroundColor:\"#66a7fd\",marginLeft:5}}>\r\n                    <EditIcon/>\r\n                </IconButton>\r\n\r\n\r\n        }>\r\n            <Modal.Header>Edit Product</Modal.Header>\r\n            <Modal.Content>\r\n                <div>\r\n                    {imageSrc ? (\r\n                        <React.Fragment>\r\n                            <div className=\"crop-container\">\r\n                                <Cropper image={imageSrc} crop={crop} rotation={rotation} aspect={1} zoom={zoom} onCropChange={setCrop} onRotationChange={setRotation} onCropComplete={onCropComplete} onZoomChange={setZoom} cropShape={\"round\"}/>\r\n                            </div>\r\n                            <center>\r\n                                <div style={{width:\"200px\",height:\"200px\"}}></div><br/>\r\n                            </center>\r\n                            <div className={{ padding: 16, display: 'flex', flexDirection: 'column', alignItems: 'stretch'}}>\r\n                                <div className={ {display: 'flex',flex: '1',alignItems: 'center'}}>\r\n                                    <Typography variant=\"overline\">\r\n                                        Zoom\r\n                                    </Typography>\r\n                                    <Slider value={zoom} min={1} max={3} step={0.1} aria-labelledby=\"Zoom\" classes={{  padding: '22px 0px', marginLeft: 16 }} onChange={(e, zoom) => setZoom(zoom)}\r\n                                    />\r\n                                </div>\r\n                                <div className={{ display: 'flex', flex: '1', alignItems: 'center'}}>\r\n                                    <Typography variant=\"overline\" classes={{    display: 'flex', flex: '1', alignItems: 'center'}}>\r\n                                        Rotation\r\n                                    </Typography>\r\n                                    <Slider value={rotation} min={0} max={360} step={1} aria-labelledby=\"Rotation\" classes={{ display: 'flex', flex: '1', alignItems: 'center'}} onChange={(e, rotation) => setRotation(rotation)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <br/>\r\n                            <center>\r\n                                <input type=\"file\" onChange={onFileChange} accept=\"image/*\" />\r\n                            </center>\r\n                        </React.Fragment>\r\n                    ) : (\r\n                        <div style={{width:\"100%\"}}>\r\n                            <center>\r\n                                <Image src={props.product.picture1}   style={{width: 400, height:400,borderRadius:400/2}} />\r\n                                <input type=\"file\" onChange={onFileChange} accept=\"image/*\" />\r\n                            </center>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <br />\r\n                <Form onSubmit={HandleSubmit}>\r\n                    <Form.Input name=\"name\" label=\"Name\" onChange={handleEditName}  />\r\n                    <Form.Input name=\"description\" label=\"Description\" onChange={handleEditDescription} />\r\n                    <Form.Field><Header as=\"h5\">Category</Header><Dropdown name=\"category\" placeholder=\"Category\" fluid selection options={listCategories} onChange={handleEditCategory} value={category.value}/>\r\n                    </Form.Field>\r\n                    <Form.Group widths=\"equal\"><Form.Input name=\"price\" label=\"Price\" onChange={handleEditPrice} value={\"$\" + props.product.price}/></Form.Group>\r\n                    <Form.Group widths=\"equal\"><Form.Input name=\"piece\" label=\"Piece\" onChange={handleEditPiece} value={props.product.piece}/></Form.Group>\r\n                    <Form.Group widths=\"equal\"><Form.Input name=\"manufacturer\" label=\"Manufacturer\" onChange={handleEditManufacturer} value={props.product.manufacturer_name}/></Form.Group>\r\n                    <Button primary fluid  onClick={async () => {await HandleSubmit} }> Edit </Button>\r\n                </Form>\r\n\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n}\r\n","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Account\\ChangePhoto.js",["267","268","269","270","271","272","273","274"],"import React, { useContext, useState, useEffect,useCallback } from \"react\";\r\nimport Context from \"../../config/context\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Form, Modal, Button, Header, Dropdown,Image ,Grid} from \"semantic-ui-react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport Cropper from 'react-easy-crop'\r\nimport Slider from '@material-ui/core/Slider'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { getOrientation } from 'get-orientation/browser'\r\nimport \"../../main.css\"\r\nimport { getCroppedImg, getRotatedImage } from '../Image/canvasUtils'\r\nfunction readFile(file) {\r\n    return new Promise(resolve => {\r\n        const reader = new FileReader()\r\n        reader.addEventListener('load', () => resolve(reader.result), false)\r\n        reader.readAsDataURL(file)\r\n    })\r\n}\r\nexport default  function ChangePhoto(props) {\r\n    const context = useContext(Context);\r\n    const {uploadFile,uploadProfilePhoto} = context;\r\n    const ORIENTATION_TO_ANGLE = {\r\n        '3': 180,\r\n        '6': 90,\r\n        '8': -90,\r\n    }\r\n\r\n    const [imageSrc, setImageSrc] = React.useState(null)\r\n    const [crop, setCrop] = useState({x: 0, y: 0})\r\n    const [rotation, setRotation] = useState(0)\r\n    const [zoom, setZoom] = useState(1)\r\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\r\n    const [croppedImage, setCroppedImage] = useState(null)\r\n    ////////////////////////////  Image///////////////////\r\n    const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n        setCroppedAreaPixels(croppedAreaPixels)\r\n    }, [])\r\n    const onFileChange = async e => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const file = e.target.files[0]\r\n            let imageDataUrl = await readFile(file)\r\n            const orientation = await getOrientation(file)\r\n            const rotation = ORIENTATION_TO_ANGLE[orientation]\r\n            if (rotation) {\r\n                imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\r\n            }\r\n            setImageSrc(imageDataUrl)\r\n        }\r\n\r\n    }\r\n    const HandleProfilePhoto = async () => {\r\n        console.log(\"sdsdsdsdsd\")\r\n        debugger;\r\n        await CroppedImagesProfilePhoto();\r\n    };\r\n    async function CroppedImagesProfilePhoto() {\r\n        const croppedProfilePhoto= await getCroppedImg(imageSrc, croppedAreaPixels, rotation)\r\n        let promiseUploadFile2 = new Promise(function (myResolve, myReject) {\r\n            let myUploadResult = uploadFile(croppedProfilePhoto)\r\n            myResolve(myUploadResult)\r\n        });\r\n        let resultProfilePhoto= await promiseUploadFile2\r\n        let pathImage = \"\"\r\n        if (resultProfilePhoto !== \"\") {\r\n            pathImage = resultProfilePhoto.data\r\n            console.log(\"sdsdsd\")\r\n        }\r\n        debugger;\r\n        let uploadProfilePromise=new Promise(function(myResolve, myReject) {\r\n            let userTmp=props.user;\r\n            userTmp.picture=process.env.PUBLIC_URL + '/generalfileStorage/'+ pathImage\r\n            let ad= uploadProfilePhoto(userTmp);\r\n            myResolve(ad)\r\n        });\r\n        let result2= await uploadProfilePromise\r\n    }\r\n\r\n    return (\r\n        <Modal trigger={\r\n            <IconButton style={{backgroundColor: \"#66a7fd\", marginLeft: 5}}>\r\n                <EditIcon/>\r\n            </IconButton>\r\n        }>\r\n            <Modal.Header  style={{marginBottom:\"300px\"}}>Change Photo</Modal.Header>\r\n            <Modal.Content>\r\n\r\n                <div>\r\n                    {imageSrc ? (\r\n                        <React.Fragment>\r\n                            <div className=\"crop-container\">\r\n\r\n                                <Cropper\r\n                                    image={imageSrc}\r\n                                    crop={crop}\r\n                                    rotation={rotation}\r\n                                    aspect={1}\r\n                                    zoom={zoom}\r\n                                    onCropChange={setCrop}\r\n                                    onRotationChange={setRotation}\r\n                                    onCropComplete={onCropComplete}\r\n                                    onZoomChange={setZoom}\r\n                                    cropShape={\"round\"}\r\n                                    style={{top:\"10%!importtant\"}}\r\n                                />\r\n                            </div>\r\n                            <center>\r\n                                <div style={{width: \"200px\", height: \"200px\"}}>\r\n\r\n                                </div>\r\n                                <br/>\r\n                            </center>\r\n                            <div className={{\r\n                                padding: 16,\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                alignItems: 'stretch'\r\n                            }}>\r\n                                <div className={{display: 'flex', flex: '1', alignItems: 'center'}}>\r\n                                    <Typography variant=\"overline\">\r\n                                        Zoom\r\n                                    </Typography>\r\n                                    <Slider value={zoom} min={1} max={3} step={0.1} aria-labelledby=\"Zoom\"\r\n                                            classes={{padding: '22px 0px', marginLeft: 16}}\r\n                                            onChange={(e, zoom) => setZoom(zoom)}\r\n                                    />\r\n                                </div>\r\n                                <div className={{display: 'flex', flex: '1', alignItems: 'center'}}>\r\n                                    <Typography variant=\"overline\"\r\n                                                classes={{display: 'flex', flex: '1', alignItems: 'center'}}>\r\n                                        Rotation\r\n                                    </Typography>\r\n                                    <Slider value={rotation} min={0} max={360} step={1} aria-labelledby=\"Rotation\"\r\n                                            classes={{display: 'flex', flex: '1', alignItems: 'center'}}\r\n                                            onChange={(e, rotation) => setRotation(rotation)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <br/>\r\n                            <center>\r\n                                <input type=\"file\" onChange={onFileChange} accept=\"image/*\"/>\r\n                            </center>\r\n\r\n                        </React.Fragment>\r\n                    ) : (\r\n                        <div style={{width: \"100%\"}}>\r\n                            <center>\r\n                                <Image src={props.user.picture}\r\n                                       style={{width: 400, height: 400, borderRadius: 400 / 2}}/>\r\n                                <input type=\"file\" onChange={onFileChange} accept=\"image/*\"/>\r\n                            </center>\r\n\r\n\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <br/>\r\n\r\n                <Form onSubmit={HandleProfilePhoto}>\r\n                    <Button  primary fluid  onClick={async () => {await HandleProfilePhoto}}>Change Photo</Button>\r\n                </Form>\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n};","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Image\\canvasUtils.js",[],"D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Image\\ImgDialog.js",[],"D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Image\\styles.js",[],"D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Owldemo1.js",["275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298"],"import React,{Component} from 'react';\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nexport class Owldemo1 extends Component {\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <div class='container-fluid' >\r\n                    <div className=\"row title\" style={{marginBottom: \"20px\"}} >\r\n                    </div>\r\n                </div>\r\n                <div class='container-fluid' style={{marginTop:\"125px\"}}>\r\n                    <OwlCarousel items={5} className=\"owl-theme\" loop nav margin={8} autoplay ={true} autoHeight={false} mergeFit={true} style={{zIndex:0}} autoplayTimeout={1000}>\r\n                        <div><img  className=\"img\" src= {process.env.PUBLIC_URL +'/owlImage'+'/1.jpg'} style={{width:\"200px\",height:\"200px\"}}/></div>\r\n                        <div><img  className=\"img\" src= {process.env.PUBLIC_URL +'/owlImage'+'/2.jpg'} style={{width:\"200px\",height:\"200px\"}}/></div>\r\n                        <div><img  className=\"img\" src= {process.env.PUBLIC_URL +'/owlImage'+'/3.jpg'} style={{width:\"200px\",height:\"200px\"}}/></div>\r\n                        <div><img  className=\"img\" src={process.env.PUBLIC_URL +'/owlImage'+'/4.jpg'}  style={{width:\"200px\",height:\"200px\"}}/></div>\r\n                        <div><img className=\"img\" src= {process.env.PUBLIC_URL +'/owlImage'+'/1.jpg'}  style={{width:\"200px\",height:\"200px\"}}/></div>\r\n                        <div><img className=\"img\" src= {process.env.PUBLIC_URL +'/owlImage'+'/2.jpg'}  style={{width:\"200px\",height:\"200px\"}}/></div>\r\n                        <div><img className=\"img\" src= {process.env.PUBLIC_URL +'/owlImage'+'/3.jpg'}  style={{width:\"200px\",height:\"200px\"}}/></div>\r\n                        <div><img  className=\"img\" src={process.env.PUBLIC_URL +'/owlImage'+'/4.jpg'}  style={{width:\"200px\",height:\"200px\"}}/></div>\r\n                        <div><img  className=\"img\" src= {process.env.PUBLIC_URL +'/owlImage'+'/1.jpg'} style={{width:\"200px\",height:\"200px\"}}/></div>\r\n                        <div><img  className=\"img\" src= {process.env.PUBLIC_URL +'/owlImage'+'/2.jpg'} style={{width:\"200px\",height:\"200px\"}}/></div>\r\n                        <div><img  className=\"img\" src= {process.env.PUBLIC_URL +'/owlImage'+'/3.jpg'} style={{width:\"200px\",height:\"200px\"}}/></div>\r\n                        <div><img  className=\"img\" src={process.env.PUBLIC_URL +'/owlImage'+'/4.jpg'}  style={{width:\"200px\",height:\"200px\"}}/></div>\r\n                    </OwlCarousel>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Owldemo1","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\footerTab.js",["299","300","301","302","303"],"import React from \"react\";\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\n\r\nconst FooterPagePro = () => {\r\n    return (\r\n        <MDBFooter color=\"stylish-color-dark\" className=\"page-footer font-small pt-4 mt-4\" style={{backgroundColor:\"#3e4551 !important\"}}>\r\n            <MDBContainer fluid className=\"text-center text-md-left\">\r\n                <MDBRow>\r\n                    <MDBCol md=\"6\">\r\n                        <h5 className=\"text-uppercase mb-4 mt-3 font-weight-bold\">\r\n                            Birsen Eczanesi\r\n                        </h5>\r\n                        <p style={{color:\"#000\"}}>\r\n                            Birsen Eczanesi\r\n                        </p>\r\n                        <br/>\r\n                        <p style={{color:\"#000\"}}>\r\n                            Adres: Aşağı Eğlence Mh, Altınoluk Sk. No:4/b, 06010 Keçiören/Ankara\r\n                        </p>\r\n                        <br/>\r\n                        <p style={{color:\"#000\"}}>\r\n                            Telefon Numarası: (0312) 322 67 17\r\n                        </p>\r\n                    </MDBCol>\r\n                    <hr className=\"clearfix w-100 d-md-none\" />\r\n                    <MDBCol md=\"2\">\r\n                        <h5 className=\"text-uppercase mb-4 mt-3 font-weight-bold\">\r\n                            Ürünler\r\n                        </h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li>\r\n                                <a href=\"#!\">Bebek ve Çocuk Sağlığı</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Kozmetik</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Bitkisel Ürünler</a>\r\n                            </li>\r\n                        </ul>\r\n                    </MDBCol>\r\n                    <hr className=\"clearfix w-100 d-md-none\" />\r\n                    <MDBCol md=\"2\">\r\n                        <h5 className=\"text-uppercase mb-4 mt-3 font-weight-bold\">\r\n                            Popüler Markalar\r\n                        </h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li>\r\n                                <a href=\"#!\">Afye</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Zinc</a>\r\n                            </li>\r\n                        </ul>\r\n                    </MDBCol>\r\n                    <hr className=\"clearfix w-100 d-md-none\" />\r\n                    <MDBCol md=\"2\">\r\n                        <h5 className=\"text-uppercase mb-4 mt-3 font-weight-bold\">\r\n\r\n                        </h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li>\r\n                                <a href=\"#!\">Aura Cacia</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Nature's Bounty</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Sport Aid</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">View All</a>\r\n                            </li>\r\n                        </ul>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n            <hr />\r\n            <div className=\"text-center\">\r\n                <ul className=\"list-unstyled list-inline\">\r\n                    <li className=\"list-inline-item\">\r\n                        <a className=\"btn-floating btn-sm btn-fb mx-1\">\r\n                            <i className=\"fab fa-facebook-f\"> </i>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"list-inline-item\">\r\n                        <a className=\"btn-floating btn-sm btn-tw mx-1\">\r\n                            <i className=\"fab fa-twitter\"> </i>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"list-inline-item\">\r\n                        <a className=\"btn-floating btn-sm btn-gplus mx-1\">\r\n                            <i className=\"fab fa-google-plus\"> </i>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"list-inline-item\">\r\n                        <a className=\"btn-floating btn-sm btn-li mx-1\">\r\n                            <i className=\"fab fa-linkedin-in\"> </i>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"list-inline-item\">\r\n                        <a className=\"btn-floating btn-sm btn-dribbble mx-1\">\r\n                            <i className=\"fab fa-dribbble\"> </i>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"footer-copyright text-center py-3\">\r\n                <MDBContainer fluid style={{color:\"#000\"}}> &copy; {new Date().getFullYear()} Copyright: <a href=\"https://www.AhmetKursatEsim.com\"> ahmetkursat.com </a>\r\n                </MDBContainer>\r\n            </div>\r\n        </MDBFooter>\r\n    );\r\n}\r\n\r\nexport default FooterPagePro;","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\pages\\ShoppingCart.js",["304","305","306","307","308","309"],"import React, {useContext, useEffect, useState} from \"react\";\r\nimport \"../main.css\"\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {Button, Form, Image, Modal} from \"semantic-ui-react\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Context from \"../config/context\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport {store} from \"react-notifications-component\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#66a7fd\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nlet rows = [];\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n    },\r\n});\r\n\r\nexport default function ShoppingCart() {\r\n    const context = useContext(Context);\r\n    const { user,addCart,cart,removeCart,removeInstantlyCart,addOrder } = context;\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(3);\r\n    const handleSubmit = () => {\r\n        let resultCartList=[]\r\n        if(localStorage.hasOwnProperty(\"cart\")){\r\n            var temp=JSON.parse(cart)\r\n            for (var key in Object.keys(temp)) {\r\n                debugger;\r\n                var tmp=temp[parseInt(Object.keys(temp)[key])][0]\r\n                var quantity=temp[parseInt(Object.keys(temp)[key])][1]\r\n                var obj2 = {\"orderQuantity\":quantity}\r\n                const result = Object.assign({}, tmp, obj2);\r\n                resultCartList.push(result)\r\n            }\r\n\r\n        }\r\n        var today = new Date();\r\n        const order = {\r\n            order_status:parseInt(\"3\"),\r\n            user_id:user.id,\r\n            created_at:today,\r\n            productsMasters:resultCartList\r\n        };\r\n        addOrder(order);\r\n        localStorage.removeItem(\"cart\")\r\n    };\r\n\r\n    function HandleShoppingCart(productRow){\r\n        addCart(productRow)\r\n        store.addNotification({\r\n            title: \"Süper!\",\r\n            message: \"Başarılı\",\r\n            type: \"success\",\r\n            insert: \"top\",\r\n            container: \"top-right\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n                duration: 2000,\r\n                onScreen: true\r\n            }\r\n        });\r\n    }\r\n\r\n    function HandleRemoveInstantlyCart(productRow){\r\n        removeInstantlyCart(productRow)\r\n        store.addNotification({\r\n            title: \"Süper!\",\r\n            message: \"Ürün Sepetten Çıkarıldı\",\r\n            type: \"success\",\r\n            insert: \"top\",\r\n            container: \"top-right\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n                duration: 2000,\r\n                onScreen: true\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    function HandleRemoveShoppingCart(productRow){\r\n        removeCart(productRow)\r\n        store.addNotification({\r\n            title: \"Süper!\",\r\n            message: \"Başarılı\",\r\n            type: \"success\",\r\n            insert: \"top\",\r\n            container: \"top-right\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n                duration: 2000,\r\n                onScreen: true\r\n            }\r\n        });\r\n    }\r\n    function getTotalPrice(){\r\n        let totalPrice=0.0\r\n        if(localStorage.hasOwnProperty(\"cart\")){\r\n            var temp2=JSON.parse(cart)\r\n            for (var key in Object.keys(temp2)) {\r\n                totalPrice=totalPrice+(temp2[parseInt(Object.keys(temp2)[key])][1]*temp2[parseInt(Object.keys(temp2)[key])][0].price)\r\n            }\r\n\r\n        }\r\n        return totalPrice\r\n\r\n    }\r\n\r\n\r\n    function getrowTotalPrice(rowTmp){\r\n        let totalrowPrice=0.0\r\n        if(localStorage.hasOwnProperty(\"cart\")){\r\n            var temp2=JSON.parse(cart)\r\n            totalrowPrice=totalrowPrice+(temp2[parseInt(rowTmp.id)][1]*temp2[parseInt(rowTmp.id)][0].price)\r\n\r\n        }\r\n        return totalrowPrice\r\n\r\n    }\r\n    const Totalprice=getTotalPrice()\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    let cartList=[]\r\n\r\n    if(localStorage.hasOwnProperty(\"cart\")){\r\n        var temp=JSON.parse(cart)\r\n        for (var key in Object.keys(temp)) {\r\n            cartList.push(temp[parseInt(Object.keys(temp)[key])][0])\r\n        }\r\n\r\n    }\r\n\r\n    const indexOfLastProduct2 = (page+1) * rowsPerPage;\r\n    const indexOfFirstProduct2= indexOfLastProduct2- rowsPerPage;\r\n    const currentProducts2 = cartList.slice(\r\n        indexOfFirstProduct2,\r\n        indexOfLastProduct2\r\n    );\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n\r\n    return (\r\n        cart.length>0?(\r\n            <div   style={{width:\"100%\",marginLeft:\"0\",marginRight:\"0\" ,minHeight:\"550px\",marginTop:\"50px\"}}>\r\n                <TableContainer component={Paper} >\r\n                    <Table  aria-label=\"customized table\" >\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledTableCell align=\"center\">Ürün Resmi</StyledTableCell>\r\n                                <StyledTableCell  align=\"center\">Ürün Adı</StyledTableCell>\r\n                                <StyledTableCell  align=\"center\">Fiyatı</StyledTableCell>\r\n                                <StyledTableCell align=\"center\" >Ürün Adeti</StyledTableCell>\r\n                                <StyledTableCell align=\"center\" >Toplam</StyledTableCell>\r\n                                <StyledTableCell align=\"center\" ></StyledTableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {currentProducts2.map((row) => (\r\n                                <StyledTableRow key={row.picture1}>\r\n                                    <StyledTableCell align=\"center\">{\r\n                                        <Image src={row.picture1}  style={{width: 50, height:50,borderRadius:100/2,display:\"inline\"}}>\r\n                                        </Image>\r\n                                    }</StyledTableCell>\r\n                                    <StyledTableCell  align=\"center\">{row.name}</StyledTableCell>\r\n                                    <StyledTableCell  align=\"center\" >{row.price}</StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">{\r\n                                        <div >\r\n                                            <center>\r\n                                                <IconButton type=\"button\" color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={()=>{HandleShoppingCart(row)}} >\r\n                                                    <AddIcon style={{fontSize:\"2rem\"}}/>\r\n                                                </IconButton>\r\n                                                <div >\r\n                                                    {JSON.parse(cart)[row.id][1]}\r\n                                                </div>\r\n\r\n                                                <IconButton type=\"button\" color=\"primary\" aria-label=\"upload picture\" component=\"span\"  onClick={()=>{HandleRemoveShoppingCart(row)}}>\r\n                                                    <RemoveIcon style={{fontSize:\"2rem\"}}/>\r\n                                                </IconButton>\r\n                                            </center>\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n                                    }</StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">{\r\n                                        getrowTotalPrice(row)\r\n                                    }</StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">{\r\n                                        <IconButton type=\"button\" color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={()=>{HandleRemoveInstantlyCart(row)}} >\r\n                                            <DeleteIcon style={{fontSize:\"2rem\"}}/>\r\n                                        </IconButton>\r\n                                    }</StyledTableCell>\r\n                                </StyledTableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[3, 5, 16]}\r\n                        component=\"div\"\r\n                        count={cartList.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                </TableContainer>\r\n\r\n                <br/>\r\n                <center>\r\n                    <header> <strong>  Sepet Toplamı  </strong>  </header>\r\n\r\n                </center>\r\n\r\n                <br/>\r\n                <div style={{width:\"100%\",backgroundColor:\"#66a7fd\",height:\"40px\",borderRadius:1000}}>\r\n\r\n                    <strong style={{marginLeft:\"1%\",float:\"left\",marginTop:\"0.5%\"}}>Sepet Toplamı</strong>\r\n\r\n                    <div style={{marginLeft:\"42%\",display:\"flex\",marginTop:\"0.5%\",float:\"left\"}}>\r\n                        <strong>Ürün Sayısı:{cartList.length}</strong>\r\n                    </div>\r\n                    <div style={{float:\"right\",marginTop:\"0.5%\",marginRight:\"1%\"}}>\r\n                        <strong >Fiyat Toplamı:{Totalprice} TL </strong>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n                <br/>\r\n                {user ?(  <Form onSubmit={handleSubmit}>\r\n                    <Button  primary style={{float:\"right\",marginTop:\"2%\",marginRight:\"0px\"}}> Ödeme Sayfası </Button>\r\n                </Form>):(\r\n                    <div>\r\n                        <div> Sepetinizde Ürün Bulunmamaktadır</div>\r\n                    </div>\r\n                )\r\n\r\n                }\r\n\r\n\r\n            </div>\r\n        ):(\r\n            <div style={{marginTop:\"125px\",minHeight:\"475px\"}}><h1>\r\n\r\n                Sepetinizde Ürün Bulunmamaktadır\r\n\r\n\r\n            </h1></div>\r\n        )\r\n\r\n    );\r\n}\r\n","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\pages\\Orders.js",["310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326"],"import React, {useContext, useEffect, useState} from \"react\";\r\n\r\nimport Context from \"../config/context\";\r\n\r\nimport {\r\n    Form,\r\n    Modal,\r\n    Button,\r\n    Header,\r\n    Dropdown,\r\n    Image,\r\n    Grid\r\n} from \"semantic-ui-react\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport OrderDetail from \"../components/Order/OrderDetail\";\r\nimport Detail from \"../components/detailProduct\";\r\nimport Select from 'react-select';\r\nimport Moment from \"react-moment\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#66a7fd\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nlet rows = [];\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n    },\r\n});\r\n\r\nexport default function Orders() {\r\n    const context = useContext(Context);\r\n    const { user,orders,getOrders,updateOrderStatus } = context;\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    useEffect(() => {\r\n        user? getOrders(user.id):getOrders(-1)\r\n\r\n    }, []);\r\n    debugger;\r\n    const indexOfLastProduct2 = (page+1) * rowsPerPage;\r\n    const indexOfFirstProduct2= indexOfLastProduct2- rowsPerPage;\r\n    const currentProducts2 = orders.reverse().slice(\r\n        indexOfFirstProduct2,\r\n        indexOfLastProduct2\r\n    );\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const optionsDrop = [\r\n        {\r\n            value: 'Preparing',\r\n            label: 'Preparing'\r\n        },\r\n        {\r\n            value: 'Reached',\r\n            label: 'Reached'\r\n        },\r\n        {\r\n            value: 'Shipped',\r\n            label: 'Shipped'\r\n        },\r\n        {\r\n            value: 'Receipt',\r\n            label: 'Receipt'\r\n        },\r\n    ]\r\n    const defaultOption = optionsDrop[3];\r\n\r\n\r\n    let selectedValue=null\r\n    const stateDrop = inputValue => { // whole object of selected option\r\n        selectedValue=inputValue.value\r\n    };\r\n\r\n    function _onSelect(order_id,user_id) {\r\n        if(selectedValue != null){\r\n            updateOrderStatus(order_id,user_id,selectedValue)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div style={{width:\"100%\",marginTop:\"50px\",minHeight:\"550px\"}}>\r\n            <TableContainer component={Paper} >\r\n                <Table  aria-label=\"customized table\" >\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell align=\"center\">Ürün Numarası</StyledTableCell>\r\n                            <StyledTableCell  align=\"center\">Müşteri</StyledTableCell>\r\n                            <StyledTableCell  align=\"center\">Sipariş Durumu</StyledTableCell>\r\n                            <StyledTableCell  align=\"center\">Sipariş Günü</StyledTableCell>\r\n                            <StyledTableCell  align=\"center\">İşlemler</StyledTableCell>\r\n                        </TableRow>\r\n\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {currentProducts2.map((row) => (\r\n                            <StyledTableRow key={row.order_id}>\r\n                                <StyledTableCell align=\"center\">{ row.order_id }</StyledTableCell>\r\n                                <StyledTableCell align=\"center\">{\r\n                                    user.admin?(row.user_id):(user.name)\r\n                                }</StyledTableCell>\r\n                                <StyledTableCell align=\"center\">{\r\n                                  row.order_status\r\n                                }</StyledTableCell>\r\n                                <StyledTableCell align=\"center\">\r\n                                    <Moment format=\"DD/MM/YYYY HH:mm:ss\" >\r\n                                        {row.created_at}\r\n                                    </Moment>\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"center\">\r\n                                    <OrderDetail orders={row.productsMasters} />\r\n                                    {\r\n                                       user.admin?(\r\n                                               <div >\r\n                                                   <Select defaultValue={defaultOption} options={optionsDrop}  style={{float:\"left\"}}   onChange={stateDrop}/>\r\n                                                   <IconButton style={{backgroundColor:\"#66a7fd\",float:\"left\"}} onClick={()=>_onSelect(row.order_id,user.id)} >\r\n                                                       <UpdateIcon/>\r\n                                                   </IconButton>\r\n                                               </div>\r\n                                       ):( <div></div>)\r\n                                    }\r\n                                </StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={orders.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </TableContainer>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Order\\OrderDetail.js",["327","328","329","330","331","332","333","334","335","336","337","338","339"],"import React, { useContext, useEffect } from \"react\";\r\n\r\nimport Context from \"../../config/context\";\r\n\r\nimport {\r\n    Form,\r\n    Modal,\r\n    Button,\r\n    Header,\r\n    Dropdown,\r\n    Image,\r\n    Grid\r\n} from \"semantic-ui-react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#66a7fd\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nlet rows = [];\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n    },\r\n});\r\nexport default function OrderDetail(props) {\r\n    const colorBtn={\r\n        backgroundColor:\"#66a7fd\"\r\n    }\r\n    const context = useContext(Context);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(3);\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const indexOfLastProduct2 = (page+1) * rowsPerPage;\r\n    const indexOfFirstProduct2= indexOfLastProduct2- rowsPerPage;\r\n    const currentProducts2 = props.orders.slice(\r\n        indexOfFirstProduct2,\r\n        indexOfLastProduct2\r\n    );\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const Totalprice= getTotalPrice()\r\n    function getTotalPrice(){\r\n        let totalPrice=0.0\r\n        for(var i=0;i<props.orders.length;i++){\r\n            totalPrice=totalPrice+(props.orders[i].orderQuantity*props.orders[i].price)\r\n\r\n        }\r\n        return totalPrice\r\n    }\r\n\r\n    return (\r\n        <Modal trigger={\r\n            <IconButton style={{backgroundColor:\"#66a7fd\",float:\"left\",marginRight:\"15px\"}}>\r\n                <InfoIcon/>\r\n            </IconButton>\r\n        }>\r\n            <Modal.Content>\r\n                <Modal.Header>\r\n                    <h1>Sipariş Detayı</h1>\r\n                </Modal.Header>\r\n                <TableContainer component={Paper} >\r\n                    <Table  aria-label=\"customized table\" >\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledTableCell align=\"center\">Ürün Resmi</StyledTableCell>\r\n                                <StyledTableCell  align=\"center\">Adı</StyledTableCell>\r\n                                <StyledTableCell  align=\"center\">Fiyatı</StyledTableCell>\r\n                                <StyledTableCell align=\"center\" >Adeti</StyledTableCell>\r\n                                <StyledTableCell align=\"center\" >Toplam</StyledTableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {currentProducts2.map((row) => (\r\n                                <StyledTableRow key={row.picture1}>\r\n                                    <StyledTableCell align=\"center\">{\r\n                                        <Image src={row.picture1}  style={{width: 100, height:100,borderRadius:100/2,display:\"inline\"}}>\r\n                                        </Image>\r\n                                    }</StyledTableCell>\r\n                                    <StyledTableCell  align=\"center\">{row.name}</StyledTableCell>\r\n                                    <StyledTableCell  align=\"center\" >{row.price}</StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">{\r\n                                       row.orderQuantity\r\n                                    }</StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">{\r\n                                        row.orderQuantity*row.price\r\n                                    }</StyledTableCell>\r\n                                </StyledTableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[3, 5, 16]}\r\n                        component=\"div\"\r\n                        count={props.orders.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                </TableContainer>\r\n                <div style={{width:\"100%\",backgroundColor:\"#66a7fd\",height:\"30px\",borderRadius:1000}}>\r\n                    <p style={{float:\"left\",marginTop:\"0.5%\",marginLeft:\"2%\"}}>Sipariş Toplamı</p>\r\n                    <p style={{float:\"left\",marginTop:\"0.5%\",marginLeft:\"35%\"}}>Ürün sayısı:{props.orders.length}</p>\r\n                    <p style={{float:\"right\",marginTop:\"0.5%\",marginRight:\"2%\"}}>{Totalprice} TL</p>\r\n                    <strong style={{float:\"right\",marginTop:\"0.5%\",marginRight:\"2%\"}} >Toplam Fiyatı: </strong>\r\n\r\n                </div>\r\n\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n}\r\n","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\Account\\AccountMenu.js",["340","341","342","343"],"import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport {Menu} from \"semantic-ui-react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {store} from \"react-notifications-component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    paper: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function AccountMenu() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const path = \"home\";\r\n    const [activeItem, setActiveItem] = useState(path);\r\n    const handleItemClick = (e, { name }) => {\r\n        setActiveItem(name);\r\n        setOpen(false);\r\n\r\n    }\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n\r\n    };\r\n    function clearContext(){\r\n        localStorage.clear()\r\n        window.location.href = '/';\r\n        setOpen(false);\r\n        store.addNotification({\r\n            title: \"Süper!\",\r\n            message: \"Başarılı Bir Şekilde Çıkış Yapıldı\",\r\n            type: \"success\",\r\n            insert: \"top\",\r\n            container: \"top-right\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n                duration: 2000,\r\n                onScreen: true\r\n            }\r\n        });\r\n    }\r\n    function MyAccountNav(){\r\n        window.location.href = '/myaccount';\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n    function handleListKeyDown(event) {\r\n        if (event.key === 'Tab') {\r\n            event.preventDefault();\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    // return focus to the button when we transitioned from !open -> open\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div><Button ref={anchorRef} aria-controls={open ? 'menu-list-grow' : undefined} aria-haspopup=\"true\" onClick={handleToggle}>\r\n               <PersonIcon style={{fontSize:\"2.5rem\",color:\"#66a7fd\"}}/>\r\n                </Button>\r\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                    {({ TransitionProps, placement }) => (\r\n                        <Grow\r\n                            {...TransitionProps}\r\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                        >\r\n                            <Paper>\r\n                                <ClickAwayListener onClickAway={handleClose}>\r\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                                        <MenuItem  onClick={MyAccountNav}>Hesabım</MenuItem>\r\n                                        <MenuItem onClick={clearContext}>Çıkış</MenuItem>\r\n                                    </MenuList>\r\n                                </ClickAwayListener>\r\n                            </Paper>\r\n                        </Grow>\r\n                    )}\r\n                </Popper>\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\SidebarEcommerce.js",[],["344","345","346"],"D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\ShoppingCart\\ShoppingCartMenu.js",["347","348","349","350","351","352","353","354","355","356","357"],"import React, {useContext, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport {Form, Image, Menu, Modal} from \"semantic-ui-react\";\r\n\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Context from \"../../config/context\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport {store} from \"react-notifications-component\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    paper: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#66a7fd\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\n\r\nexport default function ShoppingCartMenu() {\r\n    const classes = useStyles();\r\n    const context = useContext(Context);\r\n    const { user,cart,removeInstantlyCart } = context;\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const path = \"home\";\r\n    const [activeItem, setActiveItem] = useState(path);\r\n    let cartList=[]\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(3);\r\n    const Totalprice=getTotalPrice()\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n\r\n    };\r\n    function getTotalPrice(){\r\n        let totalPrice=0.0\r\n        if(localStorage.hasOwnProperty(\"cart\")){\r\n            var temp2=JSON.parse(cart)\r\n            for (var key in Object.keys(temp2)) {\r\n                totalPrice=totalPrice+(temp2[parseInt(Object.keys(temp2)[key])][1]*temp2[parseInt(Object.keys(temp2)[key])][0].price)\r\n            }\r\n\r\n        }\r\n        return totalPrice\r\n\r\n    }\r\n    function getrowTotalPrice(rowTmp){\r\n        let totalrowPrice=0.0\r\n        if(localStorage.hasOwnProperty(\"cart\")){\r\n            var temp2=JSON.parse(cart)\r\n            totalrowPrice=totalrowPrice+(temp2[parseInt(rowTmp.id)][1]*temp2[parseInt(rowTmp.id)][0].price)\r\n\r\n        }\r\n        return totalrowPrice\r\n\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    if(localStorage.hasOwnProperty(\"cart\")){\r\n        var temp=JSON.parse(cart)\r\n        for (var key in Object.keys(temp)) {\r\n            cartList.push(temp[parseInt(Object.keys(temp)[key])][0])\r\n        }\r\n\r\n    }\r\n    const indexOfLastProduct2 = (page+1) * rowsPerPage;\r\n    const indexOfFirstProduct2= indexOfLastProduct2- rowsPerPage;\r\n    const currentProducts2 = cartList.slice(\r\n        indexOfFirstProduct2,\r\n        indexOfLastProduct2\r\n    );\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    function HandleRemoveInstantlyCart(productRow){\r\n        removeInstantlyCart(productRow)\r\n        store.addNotification({\r\n            title: \"Süper!\",\r\n            message: \"Ürün Sepetten Çıkarıldı\",\r\n            type: \"success\",\r\n            insert: \"top\",\r\n            container: \"top-right\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n                duration: 2000,\r\n                onScreen: true\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n   debugger;\r\n    return (\r\n        <div className={classes.root} style={{float:\"left\",borderRadius:\"1000px\"}}>\r\n            <div style={{float:\"left\"}}>\r\n\r\n                <Button ref={anchorRef} aria-controls={open ? 'menu-list-grow' : undefined} aria-haspopup=\"true\" onClick={handleToggle} style={{float:\"left\",borderRadius:\"1000px\"}}>\r\n                <ShoppingCartIcon style={{fontSize:\"2.5rem\",float:\"left\",color:\"#66a7fd\"}}/>\r\n                </Button>\r\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                    {({ TransitionProps, placement }) => (\r\n                        <Grow\r\n                            {...TransitionProps}\r\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                        >\r\n                            <Paper>\r\n                                <ClickAwayListener onClickAway={handleClose}>\r\n                                        {(cart !==\"{}\")?(\r\n                                            <div>\r\n                                                <TableContainer>\r\n                                                    <Table  aria-label=\"customized table\" >\r\n                                                        <TableHead>\r\n                                                            <TableRow>\r\n                                                            </TableRow>\r\n                                                        </TableHead>\r\n                                                        <TableBody>\r\n                                                            {currentProducts2.map((row) => (\r\n                                                                <StyledTableRow key={row.picture1}>\r\n                                                                    <StyledTableCell align=\"center\">{\r\n                                                                        <Image src={row.picture1}  style={{width: 100, height:100,borderRadius:100/2,display:\"inline\"}}>\r\n                                                                        </Image>\r\n                                                                    }</StyledTableCell>\r\n                                                                    <StyledTableCell  align=\"center\">{row.name}</StyledTableCell>\r\n                                                                    <StyledTableCell  align=\"center\" >{row.price}</StyledTableCell>\r\n                                                                    <StyledTableCell align=\"center\">{\r\n                                                                        <div >\r\n                                                                            <center>\r\n                                                                                <div >\r\n                                                                                    {JSON.parse(cart)[row.id][1]}\r\n                                                                                </div>\r\n                                                                            </center>\r\n                                                                        </div>\r\n                                                                    }</StyledTableCell>\r\n                                                                    <StyledTableCell align=\"center\">{\r\n                                                                        getrowTotalPrice(row)\r\n                                                                    }</StyledTableCell>\r\n\r\n                                                                    <StyledTableCell align=\"center\">{\r\n                                                                        <IconButton type=\"button\" color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={()=>{HandleRemoveInstantlyCart(row)}} >\r\n                                                                            <DeleteIcon style={{fontSize:\"2rem\"}}/>\r\n                                                                        </IconButton>\r\n                                                                    }</StyledTableCell>\r\n                                                                </StyledTableRow>\r\n                                                            ))}\r\n                                                        </TableBody>\r\n                                                    </Table>\r\n                                                    <TablePagination\r\n                                                        rowsPerPageOptions={[3, 5, 16]}\r\n                                                        component=\"div\"\r\n                                                        count={cartList.length}\r\n                                                        rowsPerPage={rowsPerPage}\r\n                                                        page={page}\r\n                                                        onChangePage={handleChangePage}\r\n                                                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                    />\r\n                                                </TableContainer>\r\n                                            </div>\r\n\r\n\r\n                                        ):(\r\n                                            <div>Sepetinizde Ürün Bulunmamaktadır</div>\r\n                                        )}\r\n\r\n\r\n                                </ClickAwayListener>\r\n                            </Paper>\r\n                        </Grow>\r\n                    )}\r\n                </Popper>\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\Personal Projects\\versiyon2\\E-Commerce\\spring-boot-ecommerce\\ecommerce-frontend\\src\\components\\WishList\\WishListMenu.js",["358","359","360","361","362","363","364"],"import React, {useContext, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport {Form, Image, Menu, Modal} from \"semantic-ui-react\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Context from \"../../config/context\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {store} from \"react-notifications-component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    paper: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#66a7fd\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\n\r\nexport default function ShoppingCartMenu() {\r\n    const classes = useStyles();\r\n    const context = useContext(Context);\r\n    const { user,wish,removeInstantlyWish} = context;\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const path = \"home\";\r\n    const [activeItem, setActiveItem] = useState(path);\r\n    const handleItemClick = (e, { name }) => {\r\n        setActiveItem(name);\r\n        setOpen(false);\r\n\r\n    }\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n\r\n    };\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(3);\r\n    function getTotalPrice(){\r\n        let totalPrice=0.0\r\n        if(localStorage.hasOwnProperty(\"wish\")){\r\n            var temp2=JSON.parse(wish)\r\n            for (var key in Object.keys(temp2)) {\r\n                totalPrice=totalPrice+(temp2[parseInt(Object.keys(temp2)[key])][1]*temp2[parseInt(Object.keys(temp2)[key])][0].price)\r\n            }\r\n\r\n        }\r\n        return totalPrice\r\n\r\n    }\r\n    function getrowTotalPrice(rowTmp){\r\n        let totalrowPrice=0.0\r\n        if(localStorage.hasOwnProperty(\"wish\")){\r\n            var temp2=JSON.parse(wish)\r\n            totalrowPrice=totalrowPrice+(temp2[parseInt(rowTmp.id)][1]*temp2[parseInt(rowTmp.id)][0].price)\r\n\r\n        }\r\n        return totalrowPrice\r\n\r\n    }\r\n\r\n    function HandleRemoveInstantlywish(productRow){\r\n        removeInstantlyWish(productRow)\r\n        store.addNotification({\r\n            title: \"Süper!\",\r\n            message: \"Ürün İstek Listesinden Çıkarıldı\",\r\n            type: \"success\",\r\n            insert: \"top\",\r\n            container: \"top-right\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n                duration: 2000,\r\n                onScreen: true\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    const Totalprice=getTotalPrice()\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    let cartList=[]\r\n\r\n    if(localStorage.hasOwnProperty(\"wish\")){\r\n        var temp=JSON.parse(wish)\r\n        for (var key in Object.keys(temp)) {\r\n            cartList.push(temp[parseInt(Object.keys(temp)[key])][0])\r\n        }\r\n\r\n    }\r\n\r\n    const indexOfLastProduct2 = (page+1) * rowsPerPage;\r\n    const indexOfFirstProduct2= indexOfLastProduct2- rowsPerPage;\r\n    const currentProducts2 = cartList.slice(\r\n        indexOfFirstProduct2,\r\n        indexOfLastProduct2\r\n    );\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n\r\n\r\n\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n\r\n    return (\r\n        <div className={classes.root} style={{float:\"left\",borderRadius:\"1000px\"}}>\r\n            <div style={{float:\"left\"}}>\r\n\r\n                <Button ref={anchorRef} aria-controls={open ? 'menu-list-grow' : undefined} aria-haspopup=\"true\" onClick={handleToggle} style={{float:\"left\",borderRadius:\"1000px\"}}>\r\n                    <FavoriteBorderIcon style={{fontSize:\"2.5rem\",float:\"left\",color:\"#66a7fd\"}}/>\r\n                </Button>\r\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                    {({ TransitionProps, placement }) => (\r\n                        <Grow\r\n                            {...TransitionProps}\r\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                        >\r\n                            <Paper>\r\n                                <ClickAwayListener onClickAway={handleClose}>\r\n                                    {cartList.length>0?(\r\n                                            <div>\r\n                                                <TableContainer>\r\n                                                    <Table  aria-label=\"customized table\" >\r\n                                                        <TableHead>\r\n                                                            <TableRow>\r\n                                                            </TableRow>\r\n                                                        </TableHead>\r\n                                                        <TableBody>\r\n                                                            {currentProducts2.map((row) => (\r\n                                                                <StyledTableRow key={row.picture1}>\r\n                                                                    <StyledTableCell align=\"center\">{\r\n                                                                        <Image src={row.picture1}  style={{width: 100, height:100,borderRadius:100/2,display:\"inline\"}}>\r\n                                                                        </Image>\r\n                                                                    }</StyledTableCell>\r\n                                                                    <StyledTableCell  align=\"center\">{row.name}</StyledTableCell>\r\n                                                                    <StyledTableCell  align=\"center\" >{row.price}</StyledTableCell>\r\n                                                                    <StyledTableCell align=\"center\">{\r\n                                                                        <div >\r\n                                                                            <center>\r\n                                                                                <div >\r\n                                                                                    {JSON.parse(wish)[row.id][1]}\r\n                                                                                </div>\r\n                                                                            </center>\r\n                                                                        </div>\r\n                                                                    }</StyledTableCell>\r\n                                                                    <StyledTableCell align=\"center\">{\r\n                                                                        getrowTotalPrice(row)\r\n                                                                    }</StyledTableCell>\r\n                                                                    <StyledTableCell align=\"center\">{\r\n                                                                        <IconButton type=\"button\" color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={()=>{HandleRemoveInstantlywish(row)}} >\r\n                                                                            <DeleteIcon style={{fontSize:\"2rem\"}}/>\r\n                                                                        </IconButton>\r\n                                                                    }</StyledTableCell>\r\n                                                                </StyledTableRow>\r\n                                                            ))}\r\n                                                        </TableBody>\r\n                                                    </Table>\r\n                                                    <TablePagination\r\n                                                        rowsPerPageOptions={[3, 5, 16]}\r\n                                                        component=\"div\"\r\n                                                        count={cartList.length}\r\n                                                        rowsPerPage={rowsPerPage}\r\n                                                        page={page}\r\n                                                        onChangePage={handleChangePage}\r\n                                                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                    />\r\n                                                </TableContainer>\r\n                                            </div>\r\n\r\n                                        ):(<div>İstek Listenizde Ürün Bulunmamaktadır</div>)\r\n                                    }\r\n\r\n\r\n\r\n                                </ClickAwayListener>\r\n                            </Paper>\r\n                        </Grow>\r\n                    )}\r\n                </Popper>\r\n            </div>\r\n        </div>\r\n    );\r\n}",{"ruleId":"365","severity":1,"message":"366","line":7,"column":10,"nodeType":"367","messageId":"368","endLine":7,"endColumn":21},{"ruleId":"369","replacedBy":"370"},{"ruleId":"371","replacedBy":"372"},{"ruleId":"373","replacedBy":"374"},{"ruleId":"365","severity":1,"message":"375","line":1,"column":16,"nodeType":"367","messageId":"368","endLine":1,"endColumn":26},{"ruleId":"365","severity":1,"message":"376","line":6,"column":8,"nodeType":"367","messageId":"368","endLine":6,"endColumn":16},{"ruleId":"365","severity":1,"message":"377","line":8,"column":8,"nodeType":"367","messageId":"368","endLine":8,"endColumn":14},{"ruleId":"365","severity":1,"message":"378","line":15,"column":8,"nodeType":"367","messageId":"368","endLine":15,"endColumn":18},{"ruleId":"365","severity":1,"message":"379","line":21,"column":3,"nodeType":"367","messageId":"368","endLine":21,"endColumn":12},{"ruleId":"365","severity":1,"message":"380","line":26,"column":7,"nodeType":"367","messageId":"368","endLine":26,"endColumn":22},{"ruleId":"365","severity":1,"message":"381","line":3,"column":15,"nodeType":"367","messageId":"368","endLine":3,"endColumn":24},{"ruleId":"365","severity":1,"message":"382","line":3,"column":26,"nodeType":"367","messageId":"368","endLine":3,"endColumn":30},{"ruleId":"365","severity":1,"message":"383","line":3,"column":32,"nodeType":"367","messageId":"368","endLine":3,"endColumn":38},{"ruleId":"365","severity":1,"message":"384","line":3,"column":47,"nodeType":"367","messageId":"368","endLine":3,"endColumn":52},{"ruleId":"365","severity":1,"message":"385","line":3,"column":54,"nodeType":"367","messageId":"368","endLine":3,"endColumn":61},{"ruleId":"365","severity":1,"message":"386","line":25,"column":10,"nodeType":"367","messageId":"368","endLine":25,"endColumn":18},{"ruleId":"365","severity":1,"message":"387","line":60,"column":7,"nodeType":"367","messageId":"368","endLine":60,"endColumn":16},{"ruleId":"365","severity":1,"message":"388","line":73,"column":49,"nodeType":"367","messageId":"368","endLine":73,"endColumn":53},{"ruleId":"365","severity":1,"message":"389","line":75,"column":26,"nodeType":"367","messageId":"368","endLine":75,"endColumn":41},{"ruleId":"390","severity":1,"message":"391","line":81,"column":8,"nodeType":"392","endLine":81,"endColumn":10,"suggestions":"393"},{"ruleId":"365","severity":1,"message":"394","line":87,"column":13,"nodeType":"367","messageId":"368","endLine":87,"endColumn":27},{"ruleId":"365","severity":1,"message":"394","line":109,"column":13,"nodeType":"367","messageId":"368","endLine":109,"endColumn":27},{"ruleId":"395","severity":1,"message":"396","line":206,"column":41,"nodeType":"397","endLine":206,"endColumn":89},{"ruleId":"395","severity":1,"message":"396","line":209,"column":41,"nodeType":"397","endLine":209,"endColumn":89},{"ruleId":"395","severity":1,"message":"396","line":212,"column":41,"nodeType":"397","endLine":212,"endColumn":89},{"ruleId":"395","severity":1,"message":"396","line":215,"column":41,"nodeType":"397","endLine":215,"endColumn":89},{"ruleId":"395","severity":1,"message":"396","line":218,"column":41,"nodeType":"397","endLine":218,"endColumn":89},{"ruleId":"395","severity":1,"message":"396","line":221,"column":41,"nodeType":"397","endLine":221,"endColumn":89},{"ruleId":"365","severity":1,"message":"398","line":1,"column":16,"nodeType":"367","messageId":"368","endLine":1,"endColumn":20},{"ruleId":"365","severity":1,"message":"399","line":2,"column":28,"nodeType":"367","messageId":"368","endLine":2,"endColumn":37},{"ruleId":"365","severity":1,"message":"400","line":2,"column":39,"nodeType":"367","messageId":"368","endLine":2,"endColumn":47},{"ruleId":"365","severity":1,"message":"401","line":9,"column":8,"nodeType":"367","messageId":"368","endLine":9,"endColumn":26},{"ruleId":"365","severity":1,"message":"402","line":14,"column":10,"nodeType":"367","messageId":"368","endLine":14,"endColumn":27},{"ruleId":"365","severity":1,"message":"403","line":23,"column":10,"nodeType":"367","messageId":"368","endLine":23,"endColumn":23},{"ruleId":"404","severity":1,"message":"405","line":52,"column":17,"nodeType":"367","messageId":"406","endLine":52,"endColumn":21},{"ruleId":"404","severity":1,"message":"407","line":53,"column":22,"nodeType":"367","messageId":"406","endLine":53,"endColumn":25},{"ruleId":"365","severity":1,"message":"408","line":6,"column":8,"nodeType":"367","messageId":"368","endLine":6,"endColumn":22},{"ruleId":"365","severity":1,"message":"409","line":7,"column":8,"nodeType":"367","messageId":"368","endLine":7,"endColumn":15},{"ruleId":"365","severity":1,"message":"400","line":1,"column":29,"nodeType":"367","messageId":"368","endLine":1,"endColumn":37},{"ruleId":"365","severity":1,"message":"382","line":3,"column":9,"nodeType":"367","messageId":"368","endLine":3,"endColumn":13},{"ruleId":"365","severity":1,"message":"410","line":3,"column":15,"nodeType":"367","messageId":"368","endLine":3,"endColumn":19},{"ruleId":"365","severity":1,"message":"385","line":3,"column":21,"nodeType":"367","messageId":"368","endLine":3,"endColumn":28},{"ruleId":"365","severity":1,"message":"411","line":13,"column":8,"nodeType":"367","messageId":"368","endLine":13,"endColumn":15},{"ruleId":"365","severity":1,"message":"412","line":14,"column":8,"nodeType":"367","messageId":"368","endLine":14,"endColumn":18},{"ruleId":"390","severity":1,"message":"413","line":65,"column":44,"nodeType":"392","endLine":65,"endColumn":46,"suggestions":"414"},{"ruleId":"365","severity":1,"message":"389","line":16,"column":24,"nodeType":"367","messageId":"368","endLine":16,"endColumn":39},{"ruleId":"390","severity":1,"message":"415","line":20,"column":6,"nodeType":"392","endLine":20,"endColumn":8,"suggestions":"416"},{"ruleId":"365","severity":1,"message":"382","line":5,"column":9,"nodeType":"367","messageId":"368","endLine":5,"endColumn":13},{"ruleId":"365","severity":1,"message":"417","line":5,"column":43,"nodeType":"367","messageId":"368","endLine":5,"endColumn":48},{"ruleId":"365","severity":1,"message":"418","line":7,"column":8,"nodeType":"367","messageId":"368","endLine":7,"endColumn":12},{"ruleId":"365","severity":1,"message":"382","line":5,"column":9,"nodeType":"367","messageId":"368","endLine":5,"endColumn":13},{"ruleId":"365","severity":1,"message":"383","line":5,"column":21,"nodeType":"367","messageId":"368","endLine":5,"endColumn":27},{"ruleId":"365","severity":1,"message":"419","line":5,"column":43,"nodeType":"367","messageId":"368","endLine":5,"endColumn":51},{"ruleId":"365","severity":1,"message":"420","line":5,"column":53,"nodeType":"367","messageId":"368","endLine":5,"endColumn":58},{"ruleId":"365","severity":1,"message":"384","line":2,"column":31,"nodeType":"367","messageId":"368","endLine":2,"endColumn":36},{"ruleId":"365","severity":1,"message":"382","line":2,"column":38,"nodeType":"367","messageId":"368","endLine":2,"endColumn":42},{"ruleId":"365","severity":1,"message":"421","line":10,"column":8,"nodeType":"367","messageId":"368","endLine":10,"endColumn":14},{"ruleId":"365","severity":1,"message":"386","line":11,"column":9,"nodeType":"367","messageId":"368","endLine":11,"endColumn":17},{"ruleId":"365","severity":1,"message":"394","line":23,"column":11,"nodeType":"367","messageId":"368","endLine":23,"endColumn":25},{"ruleId":"365","severity":1,"message":"394","line":46,"column":13,"nodeType":"367","messageId":"368","endLine":46,"endColumn":27},{"ruleId":"365","severity":1,"message":"422","line":7,"column":9,"nodeType":"367","messageId":"368","endLine":7,"endColumn":19},{"ruleId":"365","severity":1,"message":"399","line":1,"column":29,"nodeType":"367","messageId":"368","endLine":1,"endColumn":38},{"ruleId":"365","severity":1,"message":"386","line":5,"column":10,"nodeType":"367","messageId":"368","endLine":5,"endColumn":18},{"ruleId":"365","severity":1,"message":"421","line":9,"column":5,"nodeType":"367","messageId":"368","endLine":9,"endColumn":11},{"ruleId":"365","severity":1,"message":"383","line":10,"column":5,"nodeType":"367","messageId":"368","endLine":10,"endColumn":11},{"ruleId":"365","severity":1,"message":"419","line":11,"column":5,"nodeType":"367","messageId":"368","endLine":11,"endColumn":13},{"ruleId":"365","severity":1,"message":"382","line":13,"column":5,"nodeType":"367","messageId":"368","endLine":13,"endColumn":9},{"ruleId":"365","severity":1,"message":"423","line":16,"column":7,"nodeType":"367","messageId":"368","endLine":16,"endColumn":16},{"ruleId":"365","severity":1,"message":"424","line":27,"column":11,"nodeType":"367","messageId":"368","endLine":27,"endColumn":18},{"ruleId":"365","severity":1,"message":"425","line":29,"column":9,"nodeType":"367","messageId":"368","endLine":29,"endColumn":11},{"ruleId":"365","severity":1,"message":"384","line":2,"column":23,"nodeType":"367","messageId":"368","endLine":2,"endColumn":28},{"ruleId":"365","severity":1,"message":"426","line":12,"column":10,"nodeType":"367","messageId":"368","endLine":12,"endColumn":20},{"ruleId":"365","severity":1,"message":"427","line":13,"column":8,"nodeType":"367","messageId":"368","endLine":13,"endColumn":17},{"ruleId":"365","severity":1,"message":"428","line":39,"column":10,"nodeType":"367","messageId":"368","endLine":39,"endColumn":22},{"ruleId":"365","severity":1,"message":"429","line":39,"column":24,"nodeType":"367","messageId":"368","endLine":39,"endColumn":39},{"ruleId":"390","severity":1,"message":"415","line":59,"column":6,"nodeType":"392","endLine":59,"endColumn":8,"suggestions":"430"},{"ruleId":"365","severity":1,"message":"431","line":82,"column":20,"nodeType":"367","messageId":"368","endLine":82,"endColumn":31},{"ruleId":"365","severity":1,"message":"432","line":91,"column":11,"nodeType":"367","messageId":"368","endLine":91,"endColumn":19},{"ruleId":"365","severity":1,"message":"433","line":123,"column":11,"nodeType":"367","messageId":"368","endLine":123,"endColumn":18},{"ruleId":"365","severity":1,"message":"382","line":4,"column":55,"nodeType":"367","messageId":"368","endLine":4,"endColumn":59},{"ruleId":"365","severity":1,"message":"434","line":5,"column":8,"nodeType":"367","messageId":"368","endLine":5,"endColumn":15},{"ruleId":"365","severity":1,"message":"426","line":11,"column":10,"nodeType":"367","messageId":"368","endLine":11,"endColumn":20},{"ruleId":"365","severity":1,"message":"427","line":12,"column":8,"nodeType":"367","messageId":"368","endLine":12,"endColumn":17},{"ruleId":"365","severity":1,"message":"435","line":15,"column":10,"nodeType":"367","messageId":"368","endLine":15,"endColumn":16},{"ruleId":"365","severity":1,"message":"428","line":36,"column":12,"nodeType":"367","messageId":"368","endLine":36,"endColumn":24},{"ruleId":"365","severity":1,"message":"436","line":39,"column":11,"nodeType":"367","messageId":"368","endLine":39,"endColumn":27},{"ruleId":"365","severity":1,"message":"428","line":41,"column":19,"nodeType":"367","messageId":"368","endLine":41,"endColumn":31},{"ruleId":"365","severity":1,"message":"437","line":46,"column":11,"nodeType":"367","messageId":"368","endLine":46,"endColumn":18},{"ruleId":"390","severity":1,"message":"415","line":65,"column":8,"nodeType":"392","endLine":65,"endColumn":10,"suggestions":"438"},{"ruleId":"365","severity":1,"message":"431","line":76,"column":22,"nodeType":"367","messageId":"368","endLine":76,"endColumn":33},{"ruleId":"365","severity":1,"message":"432","line":85,"column":15,"nodeType":"367","messageId":"368","endLine":85,"endColumn":23},{"ruleId":"365","severity":1,"message":"433","line":118,"column":13,"nodeType":"367","messageId":"368","endLine":118,"endColumn":20},{"ruleId":"365","severity":1,"message":"399","line":1,"column":39,"nodeType":"367","messageId":"368","endLine":1,"endColumn":48},{"ruleId":"365","severity":1,"message":"383","line":4,"column":31,"nodeType":"367","messageId":"368","endLine":4,"endColumn":37},{"ruleId":"365","severity":1,"message":"419","line":4,"column":39,"nodeType":"367","messageId":"368","endLine":4,"endColumn":47},{"ruleId":"365","severity":1,"message":"382","line":4,"column":55,"nodeType":"367","messageId":"368","endLine":4,"endColumn":59},{"ruleId":"365","severity":1,"message":"434","line":5,"column":8,"nodeType":"367","messageId":"368","endLine":5,"endColumn":15},{"ruleId":"365","severity":1,"message":"428","line":34,"column":12,"nodeType":"367","messageId":"368","endLine":34,"endColumn":24},{"ruleId":"365","severity":1,"message":"429","line":34,"column":26,"nodeType":"367","messageId":"368","endLine":34,"endColumn":41},{"ruleId":"365","severity":1,"message":"433","line":76,"column":13,"nodeType":"367","messageId":"368","endLine":76,"endColumn":20},{"ruleId":"439","severity":1,"message":"440","line":16,"column":30,"nodeType":"397","endLine":16,"endColumn":144},{"ruleId":"441","severity":1,"message":"442","line":16,"column":93,"nodeType":"443","messageId":"444","endLine":16,"endColumn":94},{"ruleId":"439","severity":1,"message":"440","line":17,"column":30,"nodeType":"397","endLine":17,"endColumn":144},{"ruleId":"441","severity":1,"message":"442","line":17,"column":93,"nodeType":"443","messageId":"444","endLine":17,"endColumn":94},{"ruleId":"439","severity":1,"message":"440","line":18,"column":30,"nodeType":"397","endLine":18,"endColumn":144},{"ruleId":"441","severity":1,"message":"442","line":18,"column":93,"nodeType":"443","messageId":"444","endLine":18,"endColumn":94},{"ruleId":"439","severity":1,"message":"440","line":19,"column":30,"nodeType":"397","endLine":19,"endColumn":144},{"ruleId":"441","severity":1,"message":"442","line":19,"column":92,"nodeType":"443","messageId":"444","endLine":19,"endColumn":93},{"ruleId":"439","severity":1,"message":"440","line":20,"column":30,"nodeType":"397","endLine":20,"endColumn":144},{"ruleId":"441","severity":1,"message":"442","line":20,"column":92,"nodeType":"443","messageId":"444","endLine":20,"endColumn":93},{"ruleId":"439","severity":1,"message":"440","line":21,"column":30,"nodeType":"397","endLine":21,"endColumn":144},{"ruleId":"441","severity":1,"message":"442","line":21,"column":92,"nodeType":"443","messageId":"444","endLine":21,"endColumn":93},{"ruleId":"439","severity":1,"message":"440","line":22,"column":30,"nodeType":"397","endLine":22,"endColumn":144},{"ruleId":"441","severity":1,"message":"442","line":22,"column":92,"nodeType":"443","messageId":"444","endLine":22,"endColumn":93},{"ruleId":"439","severity":1,"message":"440","line":23,"column":30,"nodeType":"397","endLine":23,"endColumn":144},{"ruleId":"441","severity":1,"message":"442","line":23,"column":92,"nodeType":"443","messageId":"444","endLine":23,"endColumn":93},{"ruleId":"439","severity":1,"message":"440","line":24,"column":30,"nodeType":"397","endLine":24,"endColumn":144},{"ruleId":"441","severity":1,"message":"442","line":24,"column":93,"nodeType":"443","messageId":"444","endLine":24,"endColumn":94},{"ruleId":"439","severity":1,"message":"440","line":25,"column":30,"nodeType":"397","endLine":25,"endColumn":144},{"ruleId":"441","severity":1,"message":"442","line":25,"column":93,"nodeType":"443","messageId":"444","endLine":25,"endColumn":94},{"ruleId":"439","severity":1,"message":"440","line":26,"column":30,"nodeType":"397","endLine":26,"endColumn":144},{"ruleId":"441","severity":1,"message":"442","line":26,"column":93,"nodeType":"443","messageId":"444","endLine":26,"endColumn":94},{"ruleId":"439","severity":1,"message":"440","line":27,"column":30,"nodeType":"397","endLine":27,"endColumn":144},{"ruleId":"441","severity":1,"message":"442","line":27,"column":92,"nodeType":"443","messageId":"444","endLine":27,"endColumn":93},{"ruleId":"395","severity":1,"message":"445","line":82,"column":25,"nodeType":"397","endLine":82,"endColumn":72},{"ruleId":"395","severity":1,"message":"445","line":87,"column":25,"nodeType":"397","endLine":87,"endColumn":72},{"ruleId":"395","severity":1,"message":"445","line":92,"column":25,"nodeType":"397","endLine":92,"endColumn":75},{"ruleId":"395","severity":1,"message":"445","line":97,"column":25,"nodeType":"397","endLine":97,"endColumn":72},{"ruleId":"395","severity":1,"message":"445","line":102,"column":25,"nodeType":"397","endLine":102,"endColumn":78},{"ruleId":"365","severity":1,"message":"399","line":1,"column":28,"nodeType":"367","messageId":"368","endLine":1,"endColumn":37},{"ruleId":"365","severity":1,"message":"420","line":10,"column":30,"nodeType":"367","messageId":"368","endLine":10,"endColumn":35},{"ruleId":"365","severity":1,"message":"446","line":37,"column":5,"nodeType":"367","messageId":"368","endLine":37,"endColumn":9},{"ruleId":"365","severity":1,"message":"387","line":39,"column":7,"nodeType":"367","messageId":"368","endLine":39,"endColumn":16},{"ruleId":"365","severity":1,"message":"447","line":51,"column":12,"nodeType":"367","messageId":"368","endLine":51,"endColumn":23},{"ruleId":"365","severity":1,"message":"448","line":51,"column":25,"nodeType":"367","messageId":"368","endLine":51,"endColumn":39},{"ruleId":"365","severity":1,"message":"400","line":1,"column":39,"nodeType":"367","messageId":"368","endLine":1,"endColumn":47},{"ruleId":"365","severity":1,"message":"449","line":6,"column":5,"nodeType":"367","messageId":"368","endLine":6,"endColumn":9},{"ruleId":"365","severity":1,"message":"420","line":7,"column":5,"nodeType":"367","messageId":"368","endLine":7,"endColumn":10},{"ruleId":"365","severity":1,"message":"421","line":8,"column":5,"nodeType":"367","messageId":"368","endLine":8,"endColumn":11},{"ruleId":"365","severity":1,"message":"383","line":9,"column":5,"nodeType":"367","messageId":"368","endLine":9,"endColumn":11},{"ruleId":"365","severity":1,"message":"419","line":10,"column":5,"nodeType":"367","messageId":"368","endLine":10,"endColumn":13},{"ruleId":"365","severity":1,"message":"417","line":11,"column":5,"nodeType":"367","messageId":"368","endLine":11,"endColumn":10},{"ruleId":"365","severity":1,"message":"382","line":12,"column":5,"nodeType":"367","messageId":"368","endLine":12,"endColumn":9},{"ruleId":"365","severity":1,"message":"450","line":15,"column":8,"nodeType":"367","messageId":"368","endLine":15,"endColumn":24},{"ruleId":"365","severity":1,"message":"434","line":25,"column":8,"nodeType":"367","messageId":"368","endLine":25,"endColumn":15},{"ruleId":"365","severity":1,"message":"451","line":26,"column":8,"nodeType":"367","messageId":"368","endLine":26,"endColumn":18},{"ruleId":"365","severity":1,"message":"452","line":27,"column":8,"nodeType":"367","messageId":"368","endLine":27,"endColumn":18},{"ruleId":"365","severity":1,"message":"453","line":29,"column":8,"nodeType":"367","messageId":"368","endLine":29,"endColumn":14},{"ruleId":"365","severity":1,"message":"454","line":32,"column":8,"nodeType":"367","messageId":"368","endLine":32,"endColumn":16},{"ruleId":"365","severity":1,"message":"446","line":52,"column":5,"nodeType":"367","messageId":"368","endLine":52,"endColumn":9},{"ruleId":"365","severity":1,"message":"387","line":54,"column":7,"nodeType":"367","messageId":"368","endLine":54,"endColumn":16},{"ruleId":"390","severity":1,"message":"455","line":75,"column":8,"nodeType":"392","endLine":75,"endColumn":10,"suggestions":"456"},{"ruleId":"365","severity":1,"message":"399","line":1,"column":29,"nodeType":"367","messageId":"368","endLine":1,"endColumn":38},{"ruleId":"365","severity":1,"message":"449","line":6,"column":5,"nodeType":"367","messageId":"368","endLine":6,"endColumn":9},{"ruleId":"365","severity":1,"message":"421","line":8,"column":5,"nodeType":"367","messageId":"368","endLine":8,"endColumn":11},{"ruleId":"365","severity":1,"message":"383","line":9,"column":5,"nodeType":"367","messageId":"368","endLine":9,"endColumn":11},{"ruleId":"365","severity":1,"message":"419","line":10,"column":5,"nodeType":"367","messageId":"368","endLine":10,"endColumn":13},{"ruleId":"365","severity":1,"message":"382","line":12,"column":5,"nodeType":"367","messageId":"368","endLine":12,"endColumn":9},{"ruleId":"365","severity":1,"message":"434","line":20,"column":8,"nodeType":"367","messageId":"368","endLine":20,"endColumn":15},{"ruleId":"365","severity":1,"message":"451","line":21,"column":8,"nodeType":"367","messageId":"368","endLine":21,"endColumn":18},{"ruleId":"365","severity":1,"message":"452","line":22,"column":8,"nodeType":"367","messageId":"368","endLine":22,"endColumn":18},{"ruleId":"365","severity":1,"message":"446","line":46,"column":5,"nodeType":"367","messageId":"368","endLine":46,"endColumn":9},{"ruleId":"365","severity":1,"message":"387","line":48,"column":7,"nodeType":"367","messageId":"368","endLine":48,"endColumn":16},{"ruleId":"365","severity":1,"message":"457","line":57,"column":11,"nodeType":"367","messageId":"368","endLine":57,"endColumn":19},{"ruleId":"365","severity":1,"message":"424","line":60,"column":11,"nodeType":"367","messageId":"368","endLine":60,"endColumn":18},{"ruleId":"365","severity":1,"message":"398","line":11,"column":9,"nodeType":"367","messageId":"368","endLine":11,"endColumn":13},{"ruleId":"365","severity":1,"message":"458","line":12,"column":9,"nodeType":"367","messageId":"368","endLine":12,"endColumn":13},{"ruleId":"365","severity":1,"message":"459","line":29,"column":12,"nodeType":"367","messageId":"368","endLine":29,"endColumn":22},{"ruleId":"365","severity":1,"message":"460","line":30,"column":11,"nodeType":"367","messageId":"368","endLine":30,"endColumn":26},{"ruleId":"369","replacedBy":"461"},{"ruleId":"371","replacedBy":"462"},{"ruleId":"373","replacedBy":"463"},{"ruleId":"365","severity":1,"message":"464","line":7,"column":8,"nodeType":"367","messageId":"368","endLine":7,"endColumn":16},{"ruleId":"365","severity":1,"message":"465","line":8,"column":8,"nodeType":"367","messageId":"368","endLine":8,"endColumn":16},{"ruleId":"365","severity":1,"message":"466","line":10,"column":8,"nodeType":"367","messageId":"368","endLine":10,"endColumn":18},{"ruleId":"365","severity":1,"message":"449","line":11,"column":9,"nodeType":"367","messageId":"368","endLine":11,"endColumn":13},{"ruleId":"365","severity":1,"message":"398","line":11,"column":22,"nodeType":"367","messageId":"368","endLine":11,"endColumn":26},{"ruleId":"365","severity":1,"message":"420","line":11,"column":28,"nodeType":"367","messageId":"368","endLine":11,"endColumn":33},{"ruleId":"365","severity":1,"message":"451","line":23,"column":8,"nodeType":"367","messageId":"368","endLine":23,"endColumn":18},{"ruleId":"365","severity":1,"message":"467","line":57,"column":13,"nodeType":"367","messageId":"368","endLine":57,"endColumn":17},{"ruleId":"365","severity":1,"message":"459","line":61,"column":12,"nodeType":"367","messageId":"368","endLine":61,"endColumn":22},{"ruleId":"365","severity":1,"message":"468","line":61,"column":24,"nodeType":"367","messageId":"368","endLine":61,"endColumn":37},{"ruleId":"365","severity":1,"message":"469","line":65,"column":11,"nodeType":"367","messageId":"368","endLine":65,"endColumn":21},{"ruleId":"365","severity":1,"message":"449","line":8,"column":9,"nodeType":"367","messageId":"368","endLine":8,"endColumn":13},{"ruleId":"365","severity":1,"message":"398","line":8,"column":22,"nodeType":"367","messageId":"368","endLine":8,"endColumn":26},{"ruleId":"365","severity":1,"message":"420","line":8,"column":28,"nodeType":"367","messageId":"368","endLine":8,"endColumn":33},{"ruleId":"365","severity":1,"message":"467","line":52,"column":13,"nodeType":"367","messageId":"368","endLine":52,"endColumn":17},{"ruleId":"365","severity":1,"message":"459","line":56,"column":12,"nodeType":"367","messageId":"368","endLine":56,"endColumn":22},{"ruleId":"365","severity":1,"message":"460","line":57,"column":11,"nodeType":"367","messageId":"368","endLine":57,"endColumn":26},{"ruleId":"365","severity":1,"message":"469","line":115,"column":11,"nodeType":"367","messageId":"368","endLine":115,"endColumn":21},"no-unused-vars","'transitions' is defined but never used.","Identifier","unusedVar","no-native-reassign",["470"],"no-negated-in-lhs",["471"],"jsx-a11y/accessible-emoji",[],"'useContext' is defined but never used.","'Owldemo1' is defined but never used.","'Navbar' is defined but never used.","'Categories' is defined but never used.","'POST_FILE' is defined but never used.","'initialStatetmp' is assigned a value but never used.","'Container' is defined but never used.","'Grid' is defined but never used.","'Header' is defined but never used.","'Label' is defined but never used.","'Segment' is defined but never used.","'useAlert' is defined but never used.","'useStyles' is assigned a value but never used.","'cart' is assigned a value but never used.","'setCardsPerPage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getProducts' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["472"],"'countItemsCart' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Menu' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'FavoriteBorderIcon' is defined but never used.","'shoppingCartCount' is defined but never used.","'wishListCount' is defined but never used.","no-redeclare","'temp' is already defined.","redeclared","'key' is already defined.","'AddProductForm' is defined but never used.","'context' is defined but never used.","'Card' is defined but never used.","'Product' is defined but never used.","'Pagination' is defined but never used.","React Hook useEffect has missing dependencies: 'getProducts' and 'user.id'. Either include them or remove the dependency array.",["473"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["474"],"'Image' is defined but never used.","'Home' is defined but never used.","'Dropdown' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'styleWidth' is assigned a value but never used.","'styledisp' is assigned a value but never used.","'context' is assigned a value but never used.","'cv' is assigned a value but never used.","'withStyles' is defined but never used.","'ImgDialog' is defined but never used.","'croppedImage' is assigned a value but never used.","'setCroppedImage' is assigned a value but never used.",["475"],"'setPicture1' is assigned a value but never used.","'pictures' is assigned a value but never used.","'result2' is assigned a value but never used.","'AddIcon' is defined but never used.","'styles' is defined but never used.","'showCroppedImage' is assigned a value but never used.","'onClose' is assigned a value but never used.",["476"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'rows' is assigned a value but never used.","'currentPage' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","'Form' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'RemoveIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'Detail' is defined but never used.","'InfoIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'getOrders' and 'user'. Either include them or remove the dependency array.",["477"],"'colorBtn' is assigned a value but never used.","'Link' is defined but never used.","'activeItem' is assigned a value but never used.","'handleItemClick' is assigned a value but never used.",["470"],["471"],[],"'MenuItem' is defined but never used.","'MenuList' is defined but never used.","'PersonIcon' is defined but never used.","'user' is assigned a value but never used.","'setActiveItem' is assigned a value but never used.","'Totalprice' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"482","fix":"483"},{"desc":"482","fix":"484"},{"desc":"482","fix":"485"},{"desc":"486","fix":"487"},"Update the dependencies array to be: [getProducts, user]",{"range":"488","text":"489"},"Update the dependencies array to be: [getProducts, user.id]",{"range":"490","text":"491"},"Update the dependencies array to be: [getCategories]",{"range":"492","text":"493"},{"range":"494","text":"493"},{"range":"495","text":"493"},"Update the dependencies array to be: [getOrders, user]",{"range":"496","text":"497"},[2611,2613],"[getProducts, user]",[1961,1963],"[getProducts, user.id]",[614,616],"[getCategories]",[2113,2115],[2736,2738],[2268,2270],"[getOrders, user]"]